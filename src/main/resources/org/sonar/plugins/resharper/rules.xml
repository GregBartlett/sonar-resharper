<rules>
  <rule key="AccessToDisposedClosure">
    <priority>MINOR</priority>
    <name><![CDATA[Access to disposed closure]]></name>
    <description><![CDATA[Access to disposed closure]]></description>
  </rule>
  <rule key="AccessToForEachVariableInClosure">
    <priority>MINOR</priority>
    <name><![CDATA[Access to foreach variable in closure]]></name>
    <description><![CDATA[Access to foreach variable in closure]]></description>
  </rule>
  <rule key="AccessToModifiedClosure">
    <priority>MINOR</priority>
    <name><![CDATA[Access to modified closure]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Access+to+modified+closure">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AccessToStaticMemberViaDerivedType">
    <priority>MINOR</priority>
    <name><![CDATA[Access to a static member of a type via a derived type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Access+to+a+static+member+of+a+type+via+a+derived+type">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="AnnotationConflictInHierarchy">
    <priority>MINOR</priority>
    <name><![CDATA[Annotation conflict in hierarchy]]></name>
    <description><![CDATA[Annotation conflict in hierarchy]]></description>
  </rule>
  <rule key="AnnotationRedundanceAtValueType">
    <priority>MINOR</priority>
    <name><![CDATA[Nullable attribute usage with declaration having value or void type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Nullable+attribute+usage+with+declaration+having+value+or+void+type">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AnnotationRedundanceInHierarchy">
    <priority>MINOR</priority>
    <name><![CDATA[Annotation duplicate in hierarchy]]></name>
    <description><![CDATA[Annotation duplicate in hierarchy]]></description>
  </rule>
  <rule key="Asp.ContentPlaceholderNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown content placeholder]]></name>
    <description><![CDATA[Unknown content placeholder]]></description>
  </rule>
  <rule key="Asp.DeadCode">
    <priority>MINOR</priority>
    <name><![CDATA[ASP.NET Dead Code]]></name>
    <description><![CDATA[ASP.NET Dead Code]]></description>
  </rule>
  <rule key="Asp.Entity">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown html entity]]></name>
    <description><![CDATA[Unknown html entity]]></description>
  </rule>
  <rule key="Asp.Image">
    <priority>MINOR</priority>
    <name><![CDATA[Wrong image size]]></name>
    <description><![CDATA[Wrong image size]]></description>
  </rule>
  <rule key="Asp.NotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown symbol]]></name>
    <description><![CDATA[Unknown symbol]]></description>
  </rule>
  <rule key="Asp.ResolveWarning">
    <priority>MINOR</priority>
    <name><![CDATA[ASP.NET Resolve Warning]]></name>
    <description><![CDATA[ASP.NET Resolve Warning]]></description>
  </rule>
  <rule key="Asp.SkinNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown skin]]></name>
    <description><![CDATA[Unknown skin]]></description>
  </rule>
  <rule key="Asp.TagAttributeWithOptionalValue">
    <priority>MINOR</priority>
    <name><![CDATA[Attribute with optional value problem]]></name>
    <description><![CDATA[Attribute with optional value problem]]></description>
  </rule>
  <rule key="AspUnusedRegisterDirectiveHighlighting">
    <priority>MINOR</priority>
    <name><![CDATA[Unused register directive]]></name>
    <description><![CDATA[Unused register directive]]></description>
  </rule>
  <rule key="Asp.ThemeNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown theme]]></name>
    <description><![CDATA[Unknown theme]]></description>
  </rule>
  <rule key="Asp.Warning">
    <priority>MINOR</priority>
    <name><![CDATA[ASP.NET Warning]]></name>
    <description><![CDATA[ASP.NET Warning]]></description>
  </rule>
  <rule key="AspOdsMethodReferenceResolveError">
    <priority>MAJOR</priority>
    <name><![CDATA[Object data source method resolve problem]]></name>
    <description><![CDATA[Object data source method resolve problem]]></description>
  </rule>
  <rule key="AssignedValueIsNeverUsed">
    <priority>MINOR</priority>
    <name><![CDATA[Assigned value is never used]]></name>
    <description><![CDATA[Assigned value is never used]]></description>
  </rule>
  <rule key="AssignNullToNotNullAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Possible 'null' assignment to entity marked with 'Value cannot be null' attribute]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Possible+'null'+assignment+to+an+entity+marked+with+'Value+cannot+be+null'+attribute">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="AssignToImplicitGlobalInFunctionScope">
    <priority>MINOR</priority>
    <name><![CDATA[Assignment to an implicitly declared global variable]]></name>
    <description><![CDATA[Assignment to an implicitly declared global variable]]></description>
  </rule>
  <rule key="Asxx.PathError">
    <priority>MINOR</priority>
    <name>Asxx.PathError</name>
    <description>Asxx.PathError</description>
  </rule>
  <rule key="BaseMemberHasParams">
    <priority>MINOR</priority>
    <name><![CDATA[Base member has 'params' parameter, but overrider hasn't]]></name>
    <description><![CDATA[Base member has 'params' parameter, but overrider hasn't]]></description>
  </rule>
  <rule key="BaseMethodCallWithDefaultParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Call to base member with implicit default parameters]]></name>
    <description><![CDATA[Call to base member with implicit default parameters]]></description>
  </rule>
  <rule key="BaseObjectEqualsIsObjectEquals">
    <priority>MINOR</priority>
    <name><![CDATA[Call to 'base.Equals(...)' is reference equality]]></name>
    <description><![CDATA[Call to 'base.Equals(...)' is reference equality]]></description>
  </rule>
  <rule key="BaseObjectGetHashCodeCallInGetHashCode">
    <priority>MINOR</priority>
    <name><![CDATA[Overriden GetHashCode calls base 'Object.GetHashCode()']]></name>
    <description><![CDATA[Overriden GetHashCode calls base 'Object.GetHashCode()']]></description>
  </rule>
  <rule key="BitwiseOperatorOnEnumWithoutFlags">
    <priority>MINOR</priority>
    <name><![CDATA[Bitwise operation on enum which is not marked by [Flags] attribute]]></name>
    <description><![CDATA[Bitwise operation on enum which is not marked by [Flags] attribute]]></description>
  </rule>
  <rule key="CanBeReplacedWithTryCastAndCheckForNull">
    <priority>INFO</priority>
    <name><![CDATA[Type check and direct cast can be replaced with try cast and check for null]]></name>
    <description><![CDATA[Type check and direct cast can be replaced with try cast and check for null]]></description>
  </rule>
  <rule key="CannotApplyEqualityOperatorToType">
    <priority>MINOR</priority>
    <name><![CDATA[Compare with '==' types marked by 'CannotApplyEqualityOperatorAttribute']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Compare+with+%27%3D%3D%27+types+marked+by+%27CannotApplyEqualityOperatorAttribute%27">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CenterTagIsObsolete">
    <priority>MAJOR</priority>
    <name>CenterTagIsObsolete</name>
    <description>CenterTagIsObsolete</description>
  </rule>
  <rule key="CheckForReferenceEqualityInstead.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="CheckForReferenceEqualityInstead.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="CheckNamespace">
    <priority>MINOR</priority>
    <name><![CDATA[Namespace does not correspond to file location]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Namespace+does+not+correspond+to+file+location">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="ClassCanBeSealed.Global">
    <priority>INFO</priority>
    <name><![CDATA[Class can be made sealed(non-inheritable): Non-private accessibility]]></name>
    <description><![CDATA[Class can be made sealed(non-inheritable): Non-private accessibility]]></description>
  </rule>
  <rule key="ClassCanBeSealed.Local">
    <priority>INFO</priority>
    <name><![CDATA[Class can be made sealed(non-inheritable): Private accessibility]]></name>
    <description><![CDATA[Class can be made sealed(non-inheritable): Private accessibility]]></description>
  </rule>
  <rule key="ClassCannotBeInstantiated">
    <priority>MINOR</priority>
    <name><![CDATA[Class cannot be instantiated]]></name>
    <description><![CDATA[Class cannot be instantiated]]></description>
  </rule>
  <rule key="ClassNeverInstantiated.Global">
    <priority>INFO</priority>
    <name><![CDATA[Class is never instantiated: Non-private accessibility]]></name>
    <description><![CDATA[Class is never instantiated: Non-private accessibility]]></description>
  </rule>
  <rule key="ClassNeverInstantiated.Local">
    <priority>INFO</priority>
    <name><![CDATA[Class is never instantiated: Private accessibility]]></name>
    <description><![CDATA[Class is never instantiated: Private accessibility]]></description>
  </rule>
  <rule key="ClassWithVirtualMembersNeverInherited.Global">
    <priority>INFO</priority>
    <name><![CDATA[Class with virtual(overridable) members never inherited: Non-private accessibility]]></name>
    <description><![CDATA[Class with virtual(overridable) members never inherited: Non-private accessibility]]></description>
  </rule>
  <rule key="ClassWithVirtualMembersNeverInherited.Local">
    <priority>INFO</priority>
    <name><![CDATA[Class with virtual(overridable) members never inherited: Private accessibility]]></name>
    <description><![CDATA[Class with virtual(overridable) members never inherited: Private accessibility]]></description>
  </rule>
  <rule key="ClearAttributeIsObsolete">
    <priority>MAJOR</priority>
    <name>ClearAttributeIsObsolete</name>
    <description>ClearAttributeIsObsolete</description>
  </rule>
  <rule key="ClearAttributeIsObsolete.All">
    <priority>MAJOR</priority>
    <name>ClearAttributeIsObsolete.All</name>
    <description>ClearAttributeIsObsolete.All</description>
  </rule>
  <rule key="CompareNonConstrainedGenericWithNull">
    <priority>MINOR</priority>
    <name><![CDATA[Possible compare of value type with 'null']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Possible+compare+of+value+type+with+null">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CompareOfFloatsByEqualityOperator">
    <priority>MINOR</priority>
    <name><![CDATA[Compare of float numbers with equality operator]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Compare+of+float+numbers+by+equality+operator">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConditionalTernaryEqualBranch">
    <priority>MINOR</priority>
    <name><![CDATA['?:' expression has identical true and false branches]]></name>
    <description><![CDATA['?:' expression has identical true and false branches]]></description>
  </rule>
  <rule key="ConditionIsAlwaysConst">
    <priority>MINOR</priority>
    <name><![CDATA[Condition is always constant]]></name>
    <description><![CDATA[Condition is always constant]]></description>
  </rule>
  <rule key="ConditionIsAlwaysTrueOrFalse">
    <priority>MINOR</priority>
    <name><![CDATA[Expression is always 'true' or always 'false']]></name>
    <description><![CDATA[Expression is always 'true' or always 'false']]></description>
  </rule>
  <rule key="ConstantNullCoalescingCondition">
    <priority>MINOR</priority>
    <name><![CDATA['??' condition is known to be null or not null]]></name>
    <description><![CDATA['??' condition is known to be null or not null]]></description>
  </rule>
  <rule key="ConstructorInitializerLoop">
    <priority>MINOR</priority>
    <name><![CDATA[Possible cyclic constructor call]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Possible+cyclic+constructor+call">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ContractAnnotationNotParsed">
    <priority>MINOR</priority>
    <name><![CDATA[Problem in contract annotation definition]]></name>
    <description><![CDATA[Problem in contract annotation definition]]></description>
  </rule>
  <rule key="ConvertClosureToMethodGroup">
    <priority>INFO</priority>
    <name><![CDATA[Convert anonymous method to method group]]></name>
    <description><![CDATA[Convert anonymous method to method group]]></description>
  </rule>
  <rule key="ConvertConditionalTernaryToNullCoalescing">
    <priority>INFO</priority>
    <name><![CDATA['?:' expression can be re-written as '??' expression]]></name>
    <description><![CDATA['?:' expression can be re-written as '??' expression]]></description>
  </rule>
  <rule key="ConvertIfDoToWhile">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'if do while' to 'while]]></name>
    <description><![CDATA[Convert 'if do while' to 'while]]></description>
  </rule>
  <rule key="ConvertIfStatementToConditionalTernaryExpression">
    <priority>INFO</priority>
    <name><![CDATA['if' statement can be re-written as '?:' expression]]></name>
    <description><![CDATA['if' statement can be re-written as '?:' expression]]></description>
  </rule>
  <rule key="ConvertIfStatementToNullCoalescingExpression">
    <priority>INFO</priority>
    <name><![CDATA['if' statement can be re-written as '??' expression]]></name>
    <description><![CDATA['if' statement can be re-written as '??' expression]]></description>
  </rule>
  <rule key="ConvertIfStatementToReturnStatement">
    <priority>INFO</priority>
    <name><![CDATA['if-return' statement can be re-written as 'return' statement]]></name>
    <description><![CDATA['if-return' statement can be re-written as 'return' statement]]></description>
  </rule>
  <rule key="ConvertIfStatementToSwitchStatement">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'if' statement to 'switch' statement]]></name>
    <description><![CDATA[Convert 'if' statement to 'switch' statement]]></description>
  </rule>
  <rule key="ConvertIfToOrExpression">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'if' to '||']]></name>
    <description><![CDATA[Convert 'if' to '||']]></description>
  </rule>
  <rule key="ConvertNullableToShortForm">
    <priority>INFO</priority>
    <name><![CDATA[Convert 'Nullable<T>' to 'T?']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/pages/viewpage.action?pageId=37235229">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ConvertToAutoProperty">
    <priority>INFO</priority>
    <name><![CDATA[Convert property to auto-property]]></name>
    <description><![CDATA[Convert property to auto-property]]></description>
  </rule>
  <rule key="ConvertToAutoPropertyWithPrivateSetter">
    <priority>INFO</priority>
    <name><![CDATA[Convert property to auto-property with private setter]]></name>
    <description><![CDATA[Convert property to auto-property with private setter]]></description>
  </rule>
  <rule key="ConvertToConstant.Global">
    <priority>INFO</priority>
    <name><![CDATA[Convert local variable or field to constant: Non-private accessibility]]></name>
    <description><![CDATA[Convert local variable or field to constant: Non-private accessibility]]></description>
  </rule>
  <rule key="ConvertToConstant.Local">
    <priority>INFO</priority>
    <name><![CDATA[Convert local variable or field to constant: Private accessibility]]></name>
    <description><![CDATA[Convert local variable or field to constant: Private accessibility]]></description>
  </rule>
  <rule key="ConvertToLambdaExpression">
    <priority>INFO</priority>
    <name><![CDATA[Convert to lambda expression]]></name>
    <description><![CDATA[Convert to lambda expression]]></description>
  </rule>
  <rule key="ConvertToStaticClass">
    <priority>INFO</priority>
    <name><![CDATA[Convert to static class]]></name>
    <description><![CDATA[Convert to static class]]></description>
  </rule>
  <rule key="CoVariantArrayConversion">
    <priority>MINOR</priority>
    <name><![CDATA[Co-variant array conversion]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Co-variant+array+conversion+may+cause+exception+on+write+operation">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0108">
    <priority>MINOR</priority>
    <name><![CDATA[CS0108,CS0114:Keyword 'new' is required]]></name>
    <description><![CDATA[CS0108,CS0114:Keyword 'new' is required]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0109">
    <priority>MINOR</priority>
    <name><![CDATA[CS0109:Keyword 'new' is redundant]]></name>
    <description><![CDATA[CS0109:Keyword 'new' is redundant]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0162">
    <priority>MINOR</priority>
    <name><![CDATA[CS0162:Code is unreachable]]></name>
    <description><![CDATA[CS0162:Code is unreachable]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0183">
    <priority>MINOR</priority>
    <name><![CDATA[CS0183:Given expression is always of the provided type]]></name>
    <description><![CDATA[CS0183:Given expression is always of the provided type]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0184">
    <priority>MINOR</priority>
    <name><![CDATA[CS0184:Given expression is never of the provided type]]></name>
    <description><![CDATA[CS0184:Given expression is never of the provided type]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0197">
    <priority>MINOR</priority>
    <name><![CDATA[CS0197:Taking address of marshal-by-reference class field]]></name>
    <description><![CDATA[CS0197:Taking address of marshal-by-reference class field]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0252">
    <priority>MINOR</priority>
    <name><![CDATA[CS0252,CS0253:Possible unintended reference comparison]]></name>
    <description><![CDATA[CS0252,CS0253:Possible unintended reference comparison]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0420">
    <priority>MINOR</priority>
    <name><![CDATA[CS0420:Reference to a volatile field will not be treated as volatile]]></name>
    <description><![CDATA[CS0420:Reference to a volatile field will not be treated as volatile]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0465">
    <priority>MINOR</priority>
    <name><![CDATA[CS0465:Introducing a 'Finalize' method can interfere with destructor invocation]]></name>
    <description><![CDATA[CS0465:Introducing a 'Finalize' method can interfere with destructor invocation]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0469">
    <priority>MINOR</priority>
    <name><![CDATA[CS0469:'goto case' value is not implicitly convertible to required type]]></name>
    <description><![CDATA[CS0469:'goto case' value is not implicitly convertible to required type]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0612">
    <priority>MINOR</priority>
    <name><![CDATA[CS0612:Use of obsolete symbol (without message)]]></name>
    <description><![CDATA[CS0612:Use of obsolete symbol (without message)]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0618">
    <priority>MINOR</priority>
    <name><![CDATA[CS0618:Use of obsolete symbol]]></name>
    <description><![CDATA[CS0618:Use of obsolete symbol]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0628">
    <priority>MINOR</priority>
    <name><![CDATA[CS0628:Declaring new protected member in sealed class is the same as declaring it as private]]></name>
    <description><![CDATA[CS0628:Declaring new protected member in sealed class is the same as declaring it as private]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0642">
    <priority>MINOR</priority>
    <name><![CDATA[CS0642:Possible mistaken empty statement]]></name>
    <description><![CDATA[CS0642:Possible mistaken empty statement]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0657">
    <priority>MINOR</priority>
    <name><![CDATA[CS0657:'attribute modifier' is not a valid attribute location for this declaration. All attributes in this block will be ignored.]]></name>
    <description><![CDATA[CS0657:'attribute modifier' is not a valid attribute location for this declaration. All attributes in this block will be ignored.]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0658">
    <priority>MINOR</priority>
    <name><![CDATA[CS0658:'attribute modifier' is not a recognized attribute location. All attributes in this block will be ignored.]]></name>
    <description><![CDATA[CS0658:'attribute modifier' is not a recognized attribute location. All attributes in this block will be ignored.]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0659">
    <priority>MINOR</priority>
    <name><![CDATA[CS0659:Class overrides Object.Equals(object o) but not Object.GetHashCode()]]></name>
    <description><![CDATA[CS0659:Class overrides Object.Equals(object o) but not Object.GetHashCode()]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0660">
    <priority>MINOR</priority>
    <name><![CDATA[CS0660,CS0661:Operator '==' or operator '!=' with 'Object.Equals(object o)' and 'Object.GetHashCode()' not overriden]]></name>
    <description><![CDATA[CS0660,CS0661:Operator '==' or operator '!=' with 'Object.Equals(object o)' and 'Object.GetHashCode()' not overriden]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0665">
    <priority>MINOR</priority>
    <name><![CDATA[CS0665:Assignment in conditional expression]]></name>
    <description><![CDATA[CS0665:Assignment in conditional expression]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0672">
    <priority>MINOR</priority>
    <name><![CDATA[CS0672:Member overrides obsolete member]]></name>
    <description><![CDATA[CS0672:Member overrides obsolete member]]></description>
  </rule>
  <rule key="CSharpWarnings::CS0693">
    <priority>MINOR</priority>
    <name><![CDATA[CS0693:Type parameter has the same name as a type parameter from the outer type]]></name>
    <description><![CDATA[CS0693:Type parameter has the same name as a type parameter from the outer type]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1030">
    <priority>MINOR</priority>
    <name><![CDATA[CS1030:'#warning' directive]]></name>
    <description><![CDATA[CS1030:'#warning' directive]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1066">
    <priority>MINOR</priority>
    <name><![CDATA[CS1066:Default value specified for parameter will have no effect because it applies to a member that is used in contexts that do not allow optional
      arguments]]></name>
    <description><![CDATA[CS1066:Default value specified for parameter will have no effect because it applies to a member that is used in contexts that do not allow optional
      arguments]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1522">
    <priority>MINOR</priority>
    <name><![CDATA[CS1522:Empty switch block]]></name>
    <description><![CDATA[CS1522:Empty switch block]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1570">
    <priority>MINOR</priority>
    <name><![CDATA[CS1570:Invalid XML in XML comment]]></name>
    <description><![CDATA[CS1570:Invalid XML in XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1571">
    <priority>MINOR</priority>
    <name><![CDATA[CS1571:Duplicate param tag in XML comment]]></name>
    <description><![CDATA[CS1571:Duplicate param tag in XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1573">
    <priority>MINOR</priority>
    <name><![CDATA[CS1573:Parameter has no matching param tag in the XML comment]]></name>
    <description><![CDATA[CS1573:Parameter has no matching param tag in the XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1574">
    <priority>MINOR</priority>
    <name><![CDATA[CS1574:Ambiguous reference in XML comment]]></name>
    <description><![CDATA[CS1574:Ambiguous reference in XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1580">
    <priority>MINOR</priority>
    <name><![CDATA[CS1580:Incorrect signature in XML comment]]></name>
    <description><![CDATA[CS1580:Incorrect signature in XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1584">
    <priority>MINOR</priority>
    <name><![CDATA[CS1584:Syntax error in XML comment]]></name>
    <description><![CDATA[CS1584:Syntax error in XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1587">
    <priority>MINOR</priority>
    <name><![CDATA[CS1587:XML comment is not placed on a valid language element]]></name>
    <description><![CDATA[CS1587:XML comment is not placed on a valid language element]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1589">
    <priority>MINOR</priority>
    <name><![CDATA[CS1589:Unable to include XML fragment]]></name>
    <description><![CDATA[CS1589:Unable to include XML fragment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1590">
    <priority>MINOR</priority>
    <name><![CDATA[CS1590:Invalid XML include element]]></name>
    <description><![CDATA[CS1590:Invalid XML include element]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1591">
    <priority>MINOR</priority>
    <name><![CDATA[CS1591:Missing XML comment for publicly visible type or member]]></name>
    <description><![CDATA[CS1591:Missing XML comment for publicly visible type or member]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1592">
    <priority>MINOR</priority>
    <name><![CDATA[CS1592:Badly formed XML in included comments file]]></name>
    <description><![CDATA[CS1592:Badly formed XML in included comments file]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1710">
    <priority>MINOR</priority>
    <name><![CDATA[CS1710:Duplicate typeparam tag in XML comment]]></name>
    <description><![CDATA[CS1710:Duplicate typeparam tag in XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1712">
    <priority>MINOR</priority>
    <name><![CDATA[CS1712:Type parameter has no matching typeparam tag in the XML comment]]></name>
    <description><![CDATA[CS1712:Type parameter has no matching typeparam tag in the XML comment]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1717">
    <priority>MINOR</priority>
    <name><![CDATA[CS1717:Assignment made to same variable]]></name>
    <description><![CDATA[CS1717:Assignment made to same variable]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1723">
    <priority>MINOR</priority>
    <name><![CDATA[CS1723:XML comment has cref attribute that refers to a type parameter]]></name>
    <description><![CDATA[CS1723:XML comment has cref attribute that refers to a type parameter]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1911">
    <priority>MINOR</priority>
    <name><![CDATA[CS1911:Access to a member through 'base' keyword from anonymous method, lambda expression, query expression or iterator results in unverifiable
      code]]></name>
    <description><![CDATA[CS1911:Access to a member through 'base' keyword from anonymous method, lambda expression, query expression or iterator results in unverifiable code]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1957">
    <priority>MINOR</priority>
    <name><![CDATA[CS1957:Multiple override candidates at run-time]]></name>
    <description><![CDATA[CS1957:Multiple override candidates at run-time]]></description>
  </rule>
  <rule key="CSharpWarnings::CS1998">
    <priority>MINOR</priority>
    <name><![CDATA[CS1998:Async function without await expression]]></name>
    <description><![CDATA[CS1998:Async function without await expression]]></description>
  </rule>
  <rule key="CSharpWarnings::CS4014">
    <priority>MINOR</priority>
    <name><![CDATA[CS4014:Async method invocation without await expression]]></name>
    <description><![CDATA[CS4014:Async method invocation without await expression]]></description>
  </rule>
  <rule key="CSharpWarnings::WME006">
    <priority>MINOR</priority>
    <name><![CDATA[WME006:Namespace should be default namespace of this project]]></name>
    <description><![CDATA[WME006:Namespace should be default namespace of this project]]></description>
  </rule>
  <rule key="CssBrowserCompatibility">
    <priority>MINOR</priority>
    <name><![CDATA[CSS symbol is not compatible with a specific browser]]></name>
    <description><![CDATA[CSS symbol is not compatible with a specific browser]]></description>
  </rule>
  <rule key="CssNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown CSS symbol]]></name>
    <description><![CDATA[Unknown CSS symbol]]></description>
  </rule>
  <rule key="CssObsolete">
    <priority>MINOR</priority>
    <name><![CDATA[CSS symbol is obsolete]]></name>
    <description><![CDATA[CSS symbol is obsolete]]></description>
  </rule>
  <rule key="CssPropertyDoesNotOverrideVendorProperty">
    <priority>MINOR</priority>
    <name><![CDATA[Property does not override vendor-prefixed property]]></name>
    <description><![CDATA[Property does not override vendor-prefixed property]]></description>
  </rule>
  <rule key="DeclarationIsEmpty">
    <priority>MINOR</priority>
    <name><![CDATA[Declaration is empty]]></name>
    <description><![CDATA[Declaration is empty]]></description>
  </rule>
  <rule key="DefaultValueAttributeForOptionalParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Possibly misleading 'DefaultValueAttribute' usage to define optional parameter value]]></name>
    <description><![CDATA[Possibly misleading 'DefaultValueAttribute' usage to define optional parameter value]]></description>
  </rule>
  <rule key="DelegateSubtraction">
    <priority>MINOR</priority>
    <name><![CDATA[Delegate subtractions]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Delegate+subtraction+has+unpredictable+semantics">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="DlTagContainsNonDtOrDdElements">
    <priority>MAJOR</priority>
    <name>DlTagContainsNonDtOrDdElements</name>
    <description>DlTagContainsNonDtOrDdElements</description>
  </rule>
  <rule key="DoNotCallOverridableMethodsInConstructor">
    <priority>MINOR</priority>
    <name><![CDATA[Virtual member call in constructor]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Virtual+method+call+in+constructor">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="DoubleNegationOperator">
    <priority>MINOR</priority>
    <name><![CDATA[Double negation operator]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Double+negation+operator">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="DuplicateResource">
    <priority>MINOR</priority>
    <name><![CDATA[Duplicate resource name]]></name>
    <description><![CDATA[Duplicate resource name]]></description>
  </rule>
  <rule key="DuplicatingLocalDeclaration">
    <priority>MINOR</priority>
    <name><![CDATA[Duplicate local declaration]]></name>
    <description><![CDATA[Duplicate local declaration]]></description>
  </rule>
  <rule key="DuplicatingPropertyDeclaration">
    <priority>MINOR</priority>
    <name><![CDATA[Duplicate property declaration]]></name>
    <description><![CDATA[Duplicate property declaration]]></description>
  </rule>
  <rule key="DuplicatingSwitchLabel">
    <priority>MINOR</priority>
    <name><![CDATA[Duplicate switch label]]></name>
    <description><![CDATA[Duplicate switch label]]></description>
  </rule>
  <rule key="DynamicShiftRightOpIsNotInt">
    <priority>MINOR</priority>
    <name><![CDATA[Right operand of dynamic shift operation should be convertible to 'int']]></name>
    <description><![CDATA[Right operand of dynamic shift operation should be convertible to 'int']]></description>
  </rule>
  <rule key="ElidedTrailingElement">
    <priority>MINOR</priority>
    <name><![CDATA[A trailing element of an array is elided]]></name>
    <description><![CDATA[A trailing element of an array is elided]]></description>
  </rule>
  <rule key="EmptyConstructor">
    <priority>MINOR</priority>
    <name><![CDATA[Empty constructor]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Empty+static+constructor+is+redundant">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EmptyDestructor">
    <priority>MINOR</priority>
    <name><![CDATA[Empty destructor]]></name>
    <description><![CDATA[Empty destructor]]></description>
  </rule>
  <rule key="EmptyEmbeddedStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Empty control statement body]]></name>
    <description><![CDATA[Empty control statement body]]></description>
  </rule>
  <rule key="EmptyForStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Empty 'for' loop is redundant]]></name>
    <description><![CDATA[Empty 'for' loop is redundant]]></description>
  </rule>
  <rule key="EmptyGeneralCatchClause">
    <priority>MINOR</priority>
    <name><![CDATA[Empty general catch clause]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Empty+general+catch+clause+suppresses+all+errors">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="EmptyNamespace">
    <priority>MINOR</priority>
    <name><![CDATA[Empty namespace declaration]]></name>
    <description><![CDATA[Empty namespace declaration]]></description>
  </rule>
  <rule key="EmptyObjectPropertyDeclaration">
    <priority>MAJOR</priority>
    <name><![CDATA[Object property declaration is expected]]></name>
    <description><![CDATA[Object property declaration is expected]]></description>
  </rule>
  <rule key="EmptyStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Empty statement is redundant]]></name>
    <description><![CDATA[Empty statement is redundant]]></description>
  </rule>
  <rule key="EmptyTitleTag">
    <priority>MAJOR</priority>
    <name>EmptyTitleTag</name>
    <description>EmptyTitleTag</description>
  </rule>
  <rule key="EnumerableSumInExplicitUncheckedContext">
    <priority>MINOR</priority>
    <name><![CDATA['Enumerable.Sum' invocation in explicit unchecked context]]></name>
    <description><![CDATA['Enumerable.Sum' invocation in explicit unchecked context]]></description>
  </rule>
  <rule key="EnumUnderlyingTypeIsInt">
    <priority>MINOR</priority>
    <name><![CDATA[Underlying type of enum is 'int']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Underlying+type+of+enum+is+'int'">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="EqualExpressionComparison">
    <priority>MINOR</priority>
    <name><![CDATA[Similar expressions comparison]]></name>
    <description><![CDATA[Similar expressions comparison]]></description>
  </rule>
  <rule key="ErrorInXmlDocReference">
    <priority>MAJOR</priority>
    <name><![CDATA[Error in Xml doc comment reference]]></name>
    <description><![CDATA[Error in Xml doc comment reference]]></description>
  </rule>
  <rule key="EventNeverInvoked">
    <priority>MINOR</priority>
    <name><![CDATA[Event never invoked]]></name>
    <description><![CDATA[Event never invoked]]></description>
  </rule>
  <rule key="EventNeverInvoked.Global">
    <priority>INFO</priority>
    <name><![CDATA[Abstract or virtual(overridable) event is never invoked]]></name>
    <description><![CDATA[Abstract or virtual(overridable) event is never invoked]]></description>
  </rule>
  <rule key="EventNeverSubscribedTo.Global">
    <priority>INFO</priority>
    <name><![CDATA[Event is never subscribed to: Non-private accessibility]]></name>
    <description><![CDATA[Event is never subscribed to: Non-private accessibility]]></description>
  </rule>
  <rule key="EventNeverSubscribedTo.Local">
    <priority>INFO</priority>
    <name><![CDATA[Event is never subscribed to: Private accessibility]]></name>
    <description><![CDATA[Event is never subscribed to: Private accessibility]]></description>
  </rule>
  <rule key="EventUnsubscriptionViaAnonymousDelegate">
    <priority>MINOR</priority>
    <name><![CDATA[Event unsubscription via anonymous delegate]]></name>
    <description><![CDATA[Event unsubscription via anonymous delegate]]></description>
  </rule>
  <rule key="ExplicitCallerInfoArgument">
    <priority>MINOR</priority>
    <name><![CDATA[Explicit argument passed to parameter with caller info attribute]]></name>
    <description><![CDATA[Explicit argument passed to parameter with caller info attribute]]></description>
  </rule>
  <rule key="ExpressionIsAlwaysConst">
    <priority>MINOR</priority>
    <name><![CDATA[Expression is always constant]]></name>
    <description><![CDATA[Expression is always constant]]></description>
  </rule>
  <rule key="ExpressionIsAlwaysNull">
    <priority>MINOR</priority>
    <name><![CDATA[Expression is always 'null']]></name>
    <description><![CDATA[Expression is always 'null']]></description>
  </rule>
  <rule key="FieldCanBeMadeReadOnly.Global">
    <priority>INFO</priority>
    <name><![CDATA[Field can be made readonly: Non-private accessibility]]></name>
    <description><![CDATA[Field can be made readonly: Non-private accessibility]]></description>
  </rule>
  <rule key="FieldCanBeMadeReadOnly.Local">
    <priority>INFO</priority>
    <name><![CDATA[Field can be made readonly: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Field+can+be+made+read-only">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ForCanBeConvertedToForeach">
    <priority>INFO</priority>
    <name><![CDATA[For-loop can be converted into foreach-loop]]></name>
    <description><![CDATA[For-loop can be converted into foreach-loop]]></description>
  </rule>
  <rule key="FormatStringPlaceholdersMismatch">
    <priority>MINOR</priority>
    <name><![CDATA[Format string placeholders mismatch]]></name>
    <description><![CDATA[Format string placeholders mismatch]]></description>
  </rule>
  <rule key="FormatStringProblem">
    <priority>MINOR</priority>
    <name><![CDATA[String formatting method problems]]></name>
    <description><![CDATA[String formatting method problems]]></description>
  </rule>
  <rule key="ForStatementConditionIsTrue">
    <priority>MINOR</priority>
    <name><![CDATA['true' is redundant as 'for'-statement condition]]></name>
    <description><![CDATA['true' is redundant as 'for'-statement condition]]></description>
  </rule>
  <rule key="FunctionNeverReturns">
    <priority>MINOR</priority>
    <name><![CDATA[Function never returns]]></name>
    <description><![CDATA[Function never returns]]></description>
  </rule>
  <rule key="FunctionRecursiveOnAllPaths">
    <priority>MINOR</priority>
    <name><![CDATA[Function is recursive on all paths]]></name>
    <description><![CDATA[Function is recursive on all paths]]></description>
  </rule>
  <rule key="GCSuppressFinalizeForTypeWithoutDestructor">
    <priority>MINOR</priority>
    <name><![CDATA['GC.SuppressFinalize' is invoked for type without destructor]]></name>
    <description><![CDATA['GC.SuppressFinalize' is invoked for type without destructor]]></description>
  </rule>
  <rule key="HeuristicallyUnreachableCode">
    <priority>MINOR</priority>
    <name><![CDATA[Heuristically unreachable code]]></name>
    <description><![CDATA[Heuristically unreachable code]]></description>
  </rule>
  <rule key="HeuristicUnreachableCode">
    <priority>MINOR</priority>
    <name><![CDATA[Heuristically unreachable code]]></name>
    <description><![CDATA[Heuristically unreachable code]]></description>
  </rule>
  <rule key="HexColorValueWithAlpha">
    <priority>MAJOR</priority>
    <name><![CDATA[Invalid hexadecimal value of color]]></name>
    <description><![CDATA[Invalid hexadecimal value of color]]></description>
  </rule>
  <rule key="Html.AttributeNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown attribute]]></name>
    <description><![CDATA[Unknown attribute]]></description>
  </rule>
  <rule key="Html.DeadCode">
    <priority>MINOR</priority>
    <name><![CDATA[Html Dead Code]]></name>
    <description><![CDATA[Html Dead Code]]></description>
  </rule>
  <rule key="Html.EventNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown event]]></name>
    <description><![CDATA[Unknown event]]></description>
  </rule>
  <rule key="Html.IdNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown ID]]></name>
    <description><![CDATA[Unknown ID]]></description>
  </rule>
  <rule key="Html.Obsolete">
    <priority>MINOR</priority>
    <name><![CDATA[Obsolete or nonstandard element]]></name>
    <description><![CDATA[Obsolete or nonstandard element]]></description>
  </rule>
  <rule key="Html.PathError">
    <priority>MINOR</priority>
    <name><![CDATA[Path error]]></name>
    <description><![CDATA[Path error]]></description>
  </rule>
  <rule key="Html.TagNotClosed">
    <priority>MAJOR</priority>
    <name><![CDATA[Not closed tag]]></name>
    <description><![CDATA[Not closed tag]]></description>
  </rule>
  <rule key="Html.TagNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown tag]]></name>
    <description><![CDATA[Unknown tag]]></description>
  </rule>
  <rule key="Html.TagShouldBeSelfClosed">
    <priority>MINOR</priority>
    <name><![CDATA[Wrong closed tag]]></name>
    <description><![CDATA[Wrong closed tag]]></description>
  </rule>
  <rule key="Html.TagShouldNotBeSelfClosed">
    <priority>MINOR</priority>
    <name><![CDATA[Wrong self-closed tag]]></name>
    <description><![CDATA[Wrong self-closed tag]]></description>
  </rule>
  <rule key="Html.Warning">
    <priority>MINOR</priority>
    <name><![CDATA[Html Warning]]></name>
    <description><![CDATA[Html Warning]]></description>
  </rule>
  <rule key="ImplicitlyCapturedClosure">
    <priority>INFO</priority>
    <name><![CDATA[Implicitly captured closure]]></name>
    <description><![CDATA[Implicitly captured closure]]></description>
  </rule>
  <rule key="ImpureMethodCallOnReadonlyValueField">
    <priority>MINOR</priority>
    <name><![CDATA[Impure method is called for readonly field of value type]]></name>
    <description><![CDATA[Impure method is called for readonly field of value type]]></description>
  </rule>
  <rule key="InactivePreprocessorBranch">
    <priority>MINOR</priority>
    <name><![CDATA[Inactive preprocessor branch]]></name>
    <description><![CDATA[Inactive preprocessor branch]]></description>
  </rule>
  <rule key="InconsistentFunctionReturns">
    <priority>MINOR</priority>
    <name><![CDATA[Inconsistent function returns]]></name>
    <description><![CDATA[Inconsistent function returns]]></description>
  </rule>
  <rule key="InconsistentNaming">
    <priority>MINOR</priority>
    <name><![CDATA[Inconsistent Naming]]></name>
    <description><![CDATA[Inconsistent Naming]]></description>
  </rule>
  <rule key="IntroduceOptionalParameters.Global">
    <priority>INFO</priority>
    <name><![CDATA[Introduce optional parameters: Non-private accessibility]]></name>
    <description><![CDATA[Introduce optional parameters: Non-private accessibility]]></description>
  </rule>
  <rule key="IntroduceOptionalParameters.Local">
    <priority>INFO</priority>
    <name><![CDATA[Introduce optional parameters: Private accessibility]]></name>
    <description><![CDATA[Introduce optional parameters: Private accessibility]]></description>
  </rule>
  <rule key="InvalidAttributeValue">
    <priority>MINOR</priority>
    <name><![CDATA[Invalid attribute value]]></name>
    <description><![CDATA[Invalid attribute value]]></description>
  </rule>
  <rule key="InvalidTaskElement">
    <priority>INFO</priority>
    <name><![CDATA[Invalid task element]]></name>
    <description><![CDATA[Invalid task element]]></description>
  </rule>
  <rule key="InvalidValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Invalid value]]></name>
    <description><![CDATA[Invalid value]]></description>
  </rule>
  <rule key="InvalidValueType">
    <priority>MINOR</priority>
    <name><![CDATA[Resource value type is invalid]]></name>
    <description><![CDATA[Resource value type is invalid]]></description>
  </rule>
  <rule key="InvertCondition.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Invert condition: Invert condition]]></name>
    <description><![CDATA[Invert condition: Invert condition]]></description>
  </rule>
  <rule key="InvertIf">
    <priority>INFO</priority>
    <name><![CDATA[Invert 'if' statement to reduce nesting]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Invert+'if'+to+reduce+nesting">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="InvocationIsSkipped">
    <priority>INFO</priority>
    <name><![CDATA[Method invocation is skipped]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Method+invocation+is+skipped">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="InvocationOfNonFunction">
    <priority>MINOR</priority>
    <name><![CDATA[Invocation of non-function expression]]></name>
    <description><![CDATA[Invocation of non-function expression]]></description>
  </rule>
  <rule key="InvokeAsExtensionMethod">
    <priority>INFO</priority>
    <name><![CDATA[Convert static method invocation to extension method call]]></name>
    <description><![CDATA[Convert static method invocation to extension method call]]></description>
  </rule>
  <rule key="InvokedExpressionMaybeNonFunction">
    <priority>MINOR</priority>
    <name><![CDATA[Invoked expression is not a function value]]></name>
    <description><![CDATA[Invoked expression is not a function value]]></description>
  </rule>
  <rule key="IteratorMethodResultIsIgnored">
    <priority>MINOR</priority>
    <name><![CDATA[Return value of iterator is not used]]></name>
    <description><![CDATA[Return value of iterator is not used]]></description>
  </rule>
  <rule key="JoinDeclarationAndInitializer">
    <priority>INFO</priority>
    <name><![CDATA[Join local variable declaration and assignment]]></name>
    <description><![CDATA[Join local variable declaration and assignment]]></description>
  </rule>
  <rule key="JsFunctionCanBeConvertedToLambda">
    <priority>INFO</priority>
    <name>JsFunctionCanBeConvertedToLambda</name>
    <description>JsFunctionCanBeConvertedToLambda</description>
  </rule>
  <rule key="JsUnreachableCode">
    <priority>MINOR</priority>
    <name><![CDATA[Unreachable code]]></name>
    <description><![CDATA[Unreachable code]]></description>
  </rule>
  <rule key="JumpMustBeInLoop">
    <priority>MINOR</priority>
    <name><![CDATA[Use 'break' or 'continue' outside of loop body]]></name>
    <description><![CDATA[Use 'break' or 'continue' outside of loop body]]></description>
  </rule>
  <rule key="LabelOrSemicolonExpected">
    <priority>MAJOR</priority>
    <name><![CDATA[Use of expression after break or continue]]></name>
    <description><![CDATA[Use of expression after break or continue]]></description>
  </rule>
  <rule key="LocalizableElement">
    <priority>MINOR</priority>
    <name><![CDATA[Element is localizable]]></name>
    <description><![CDATA[Element is localizable]]></description>
  </rule>
  <rule key="LocalVariableHidesMember">
    <priority>MINOR</priority>
    <name><![CDATA[Local variable hides member]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Local+variable+hides+member">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="LongLiteralEndingLowerL">
    <priority>MINOR</priority>
    <name><![CDATA[Long literal ending with 'l' instead of 'L']]></name>
    <description><![CDATA[Long literal ending with 'l' instead of 'L']]></description>
  </rule>
  <rule key="LoopCanBeConvertedToQuery">
    <priority>INFO</priority>
    <name><![CDATA[Loop can be converted into LINQ-expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Loop+can+be+converted+into+a+LINQ+expression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="LoopCanBePartlyConvertedToQuery">
    <priority>INFO</priority>
    <name><![CDATA[Part of loop's body can be converted into LINQ-expression]]></name>
    <description><![CDATA[Part of loop's body can be converted into LINQ-expression]]></description>
  </rule>
  <rule key="LoopVariableIsNeverChangedInsideLoop">
    <priority>MINOR</priority>
    <name><![CDATA[Loop control variable is never changed inside loop]]></name>
    <description><![CDATA[Loop control variable is never changed inside loop]]></description>
  </rule>
  <rule key="LValueIsExpected">
    <priority>MAJOR</priority>
    <name><![CDATA[L-value expected error]]></name>
    <description><![CDATA[L-value expected error]]></description>
  </rule>
  <rule key="MeaninglessDefaultParameterValue">
    <priority>MINOR</priority>
    <name><![CDATA['DefaultParameterValueAttrbiute' should be used in conjunction with 'OptionalAttribute']]></name>
    <description><![CDATA['DefaultParameterValueAttrbiute' should be used in conjunction with 'OptionalAttribute']]></description>
  </rule>
  <rule key="MemberCanBeInternal">
    <priority>INFO</priority>
    <name><![CDATA[Member or type can be made internal(friend)]]></name>
    <description><![CDATA[Member or type can be made internal(friend)]]></description>
  </rule>
  <rule key="MemberCanBeMadeStatic.Global">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made static(shared): Non-private accessibility]]></name>
    <description><![CDATA[Member can be made static(shared): Non-private accessibility]]></description>
  </rule>
  <rule key="MemberCanBeMadeStatic.Local">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made static(shared): Private accessibility]]></name>
    <description><![CDATA[Member can be made static(shared): Private accessibility]]></description>
  </rule>
  <rule key="MemberCanBePrivate.Global">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made private: Non-private accessibility]]></name>
    <description><![CDATA[Member can be made private: Non-private accessibility]]></description>
  </rule>
  <rule key="MemberCanBePrivate.Local">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made private: Private accessibility]]></name>
    <description><![CDATA[Member can be made private: Private accessibility]]></description>
  </rule>
  <rule key="MemberCanBeProtected.Global">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made protected: Non-private accessibility]]></name>
    <description><![CDATA[Member can be made protected: Non-private accessibility]]></description>
  </rule>
  <rule key="MemberCanBeProtected.Local">
    <priority>INFO</priority>
    <name><![CDATA[Member can be made protected: Private accessibility]]></name>
    <description><![CDATA[Member can be made protected: Private accessibility]]></description>
  </rule>
  <rule key="MemberHidesStaticFromOuterClass">
    <priority>MINOR</priority>
    <name><![CDATA[Member hides static member from outer class]]></name>
    <description><![CDATA[Member hides static member from outer class]]></description>
  </rule>
  <rule key="MethodOverloadWithOptionalParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Method with optional or 'params' parameter is hidden by overload]]></name>
    <description><![CDATA[Method with optional or 'params' parameter is hidden by overload]]></description>
  </rule>
  <rule key="MethodSupportsCancellation">
    <priority>INFO</priority>
    <name><![CDATA[Method supports cancellation]]></name>
    <description><![CDATA[Method supports cancellation]]></description>
  </rule>
  <rule key="MissingAltAttributeInImgTag">
    <priority>MAJOR</priority>
    <name>MissingAltAttributeInImgTag</name>
    <description>MissingAltAttributeInImgTag</description>
  </rule>
  <rule key="MissingAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Missing required attribute]]></name>
    <description><![CDATA[Missing required attribute]]></description>
  </rule>
  <rule key="MissingBodyTag">
    <priority>MAJOR</priority>
    <name>MissingBodyTag</name>
    <description>MissingBodyTag</description>
  </rule>
  <rule key="MissingHeadAndBodyTags">
    <priority>MAJOR</priority>
    <name>MissingHeadAndBodyTags</name>
    <description>MissingHeadAndBodyTags</description>
  </rule>
  <rule key="MissingHeadTag">
    <priority>MAJOR</priority>
    <name>MissingHeadTag</name>
    <description>MissingHeadTag</description>
  </rule>
  <rule key="MissingTitleTag">
    <priority>MAJOR</priority>
    <name>MissingTitleTag</name>
    <description>MissingTitleTag</description>
  </rule>
  <rule key="MisuseOfOwnerFunctionThis">
    <priority>MINOR</priority>
    <name><![CDATA[Misuse of 'this' qualifier in inner function]]></name>
    <description><![CDATA[Misuse of 'this' qualifier in inner function]]></description>
  </rule>
  <rule key="MoreSpecificForeachVariableTypeAvailable">
    <priority>INFO</priority>
    <name><![CDATA[Iteration variable can be declared with a more specific type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Iteration+variable+can+be+declared+with+a+more+specific+type">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MultipleDeclarationsInForeach">
    <priority>MAJOR</priority>
    <name><![CDATA[Multiple declarations in 'for in' error]]></name>
    <description><![CDATA[Multiple declarations in 'for in' error]]></description>
  </rule>
  <rule key="MultipleNullableAttributesUsage">
    <priority>MINOR</priority>
    <name><![CDATA[Multiple nullable attributes usage]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Multiple+nullable+attributes+usage">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="MultipleOrderBy">
    <priority>MINOR</priority>
    <name><![CDATA[Multiple sequential 'OrderBy' invocation]]></name>
    <description><![CDATA[Multiple sequential 'OrderBy' invocation]]></description>
  </rule>
  <rule key="MultipleOutputTags">
    <priority>MINOR</priority>
    <name><![CDATA[Multiple output tags defined]]></name>
    <description><![CDATA[Multiple output tags defined]]></description>
  </rule>
  <rule key="Mvc.ActionNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown action]]></name>
    <description><![CDATA[MVC: Unknown action]]></description>
  </rule>
  <rule key="Mvc.AreaNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown area]]></name>
    <description><![CDATA[MVC: Unknown area]]></description>
  </rule>
  <rule key="Mvc.ControllerNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown controller]]></name>
    <description><![CDATA[MVC: Unknown controller]]></description>
  </rule>
  <rule key="Mvc.InvalidModelType">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Mismatch Model Type]]></name>
    <description><![CDATA[MVC: Mismatch Model Type]]></description>
  </rule>
  <rule key="Mvc.MasterpageNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown masterpage]]></name>
    <description><![CDATA[MVC: Unknown masterpage]]></description>
  </rule>
  <rule key="Mvc.PartialViewNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown partial view]]></name>
    <description><![CDATA[MVC: Unknown partial view]]></description>
  </rule>
  <rule key="Mvc.TemplateNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown template]]></name>
    <description><![CDATA[MVC: Unknown template]]></description>
  </rule>
  <rule key="Mvc.ViewNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[MVC: Unknown view]]></name>
    <description><![CDATA[MVC: Unknown view]]></description>
  </rule>
  <rule key="NegativeEqualityExpression">
    <priority>INFO</priority>
    <name><![CDATA[Simplify negative equality expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Simplify+negative+equality+expression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="NonReadonlyFieldInGetHashCode">
    <priority>MINOR</priority>
    <name><![CDATA[Non-readonly field referenced in 'GetHashCode()']]></name>
    <description><![CDATA[Non-readonly field referenced in 'GetHashCode()']]></description>
  </rule>
  <rule key="NonVolatileFieldInDoubleCheckLocking">
    <priority>MINOR</priority>
    <name><![CDATA[Possible incorrect implementation of Double-Check Locking. Checked field must be volatile or assigned from local variable after 'Thread.MemoryBarrier()'
      call]]></name>
    <description><![CDATA[Possible incorrect implementation of Double-Check Locking. Checked field must be volatile or assigned from local variable after
      'Thread.MemoryBarrier()' call]]></description>
  </rule>
  <rule key="NotAccessedField.Global">
    <priority>INFO</priority>
    <name><![CDATA[Non-accessed field: Non-private accessibility]]></name>
    <description><![CDATA[Non-accessed field: Non-private accessibility]]></description>
  </rule>
  <rule key="NotAccessedField.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Non-accessed field: Private accessibility]]></name>
    <description><![CDATA[Non-accessed field: Private accessibility]]></description>
  </rule>
  <rule key="NotAccessedVariable">
    <priority>MINOR</priority>
    <name><![CDATA[Non-accessed local variable]]></name>
    <description><![CDATA[Non-accessed local variable]]></description>
  </rule>
  <rule key="NotAccessedVariable.Compiler">
    <priority>MINOR</priority>
    <name><![CDATA[Non-accessed local variable]]></name>
    <description><![CDATA[Non-accessed local variable]]></description>
  </rule>
  <rule key="NotAllPathsReturnValue">
    <priority>MINOR</priority>
    <name><![CDATA[Not all code paths return a value]]></name>
    <description><![CDATA[Not all code paths return a value]]></description>
  </rule>
  <rule key="NotAssignedOutParameter">
    <priority>MINOR</priority>
    <name><![CDATA['out' parameter is not assigned upon exit]]></name>
    <description><![CDATA['out' parameter is not assigned upon exit]]></description>
  </rule>
  <rule key="NotDeclaredInParentCulture">
    <priority>MINOR</priority>
    <name><![CDATA[Resource is not declared in base culture]]></name>
    <description><![CDATA[Resource is not declared in base culture]]></description>
  </rule>
  <rule key="NotOverridenInSpecificCulture">
    <priority>MINOR</priority>
    <name><![CDATA[Resource is not overridden in specific culture]]></name>
    <description><![CDATA[Resource is not overridden in specific culture]]></description>
  </rule>
  <rule key="NotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Cannot resolve symbol]]></name>
    <description><![CDATA[Cannot resolve symbol]]></description>
  </rule>
  <rule key="NotResolvedInText">
    <priority>MINOR</priority>
    <name><![CDATA[Cannot resolve symbol in text argument]]></name>
    <description><![CDATA[Cannot resolve symbol in text argument]]></description>
  </rule>
  <rule key="NUnit.NonPublicMethodWithTestAttribute">
    <priority>MAJOR</priority>
    <name>NUnit.NonPublicMethodWithTestAttribute</name>
    <description>NUnit.NonPublicMethodWithTestAttribute</description>
  </rule>
  <rule key="ObjectCreationAsStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Possible unassigned object created by 'new' expression]]></name>
    <description><![CDATA[Possible unassigned object created by 'new' expression]]></description>
  </rule>
  <rule key="OlTagContainsNonLiElements">
    <priority>MAJOR</priority>
    <name>OlTagContainsNonLiElements</name>
    <description>OlTagContainsNonLiElements</description>
  </rule>
  <rule key="OperatorIsCanBeUsed">
    <priority>MINOR</priority>
    <name><![CDATA[Operator 'is'/'Type Of ... Is ...' can be used]]></name>
    <description><![CDATA[Operator 'is'/'Type Of ... Is ...' can be used]]></description>
  </rule>
  <rule key="OptionalParameterHierarchyMismatch">
    <priority>MINOR</priority>
    <name><![CDATA[Mismatch optional parameter value in overridden method]]></name>
    <description><![CDATA[Mismatch optional parameter value in overridden method]]></description>
  </rule>
  <rule key="OptionalParameterRefOut">
    <priority>MINOR</priority>
    <name><![CDATA['ref' or 'out' parameter with [Optional] attribute]]></name>
    <description><![CDATA['ref' or 'out' parameter with [Optional] attribute]]></description>
  </rule>
  <rule key="OtherTagsInsideScript1">
    <priority>MAJOR</priority>
    <name>OtherTagsInsideScript1</name>
    <description>OtherTagsInsideScript1</description>
  </rule>
  <rule key="OtherTagsInsideScript2">
    <priority>MAJOR</priority>
    <name>OtherTagsInsideScript2</name>
    <description>OtherTagsInsideScript2</description>
  </rule>
  <rule key="OtherTagsInsideUnclosedScript">
    <priority>MAJOR</priority>
    <name>OtherTagsInsideUnclosedScript</name>
    <description>OtherTagsInsideUnclosedScript</description>
  </rule>
  <rule key="OutputTagRequired">
    <priority>MINOR</priority>
    <name><![CDATA[Output tag required]]></name>
    <description><![CDATA[Output tag required]]></description>
  </rule>
  <rule key="OverridenWithEmptyValue">
    <priority>MINOR</priority>
    <name><![CDATA[Resource overrides base resource with empty value]]></name>
    <description><![CDATA[Resource overrides base resource with empty value]]></description>
  </rule>
  <rule key="OverridenWithSameValue">
    <priority>INFO</priority>
    <name><![CDATA[Resource is overridden with identical value]]></name>
    <description><![CDATA[Resource is overridden with identical value]]></description>
  </rule>
  <rule key="ParameterHidesMember">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter hides member]]></name>
    <description><![CDATA[Parameter hides member]]></description>
  </rule>
  <rule key="ParameterTypeCanBeEnumerable.Global">
    <priority>INFO</priority>
    <name><![CDATA[Parameter type can be IEnumerable<T>: Non-private accessibility]]></name>
    <description><![CDATA[Parameter type can be IEnumerable<T>: Non-private accessibility]]></description>
  </rule>
  <rule key="ParameterTypeCanBeEnumerable.Local">
    <priority>INFO</priority>
    <name><![CDATA[Parameter type can be IEnumerable<T>: Private accessibility]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Parameter+type+can+be+IEnumerable+of+T">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ParameterValueIsNotUsed">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter value is not used]]></name>
    <description><![CDATA[Parameter value is not used]]></description>
  </rule>
  <rule key="PartialMethodParameterNameMismatch">
    <priority>MINOR</priority>
    <name><![CDATA[Parameter name differs in partial method declaration]]></name>
    <description><![CDATA[Parameter name differs in partial method declaration]]></description>
  </rule>
  <rule key="PartialMethodWithSinglePart">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'partial' modifier on method declaration]]></name>
    <description><![CDATA[Redundant 'partial' modifier on method declaration]]></description>
  </rule>
  <rule key="PartialTypeWithSinglePart">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'partial' modifier on type declaration]]></name>
    <description><![CDATA[Redundant 'partial' modifier on type declaration]]></description>
  </rule>
  <rule key="PathNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve file system path]]></name>
    <description><![CDATA[Cannot resolve file system path]]></description>
  </rule>
  <rule key="PolymorphicFieldLikeEventInvocation">
    <priority>MINOR</priority>
    <name><![CDATA[Invocation of polymorphic field-like event]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Invocation+of+polymorphic+field-like+event">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleAssignmentToReadonlyField">
    <priority>MINOR</priority>
    <name><![CDATA[Assignment to a property of a readonly field can be useless]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Assignment+to+a+property+of+a+readonly+field+can+be+useless">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleInfiniteInheritance">
    <priority>MINOR</priority>
    <name><![CDATA[Possible infinite inheritance]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Possible+infinite+inheritance">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleIntendedRethrow">
    <priority>MINOR</priority>
    <name><![CDATA[Exception rethrow possibly intended]]></name>
    <description><![CDATA[Exception rethrow possibly intended]]></description>
  </rule>
  <rule key="PossibleInterfaceMemberAmbiguity">
    <priority>MINOR</priority>
    <name><![CDATA[Possible ambiguity while accessing member by interface]]></name>
    <description><![CDATA[Possible ambiguity while accessing member by interface]]></description>
  </rule>
  <rule key="PossibleInvalidCastException">
    <priority>MINOR</priority>
    <name><![CDATA[Possible 'System.InvalidCastException']]></name>
    <description><![CDATA[Possible 'System.InvalidCastException']]></description>
  </rule>
  <rule key="PossibleInvalidCastExceptionInForeachLoop">
    <priority>MINOR</priority>
    <name><![CDATA[Possible 'System.InvalidCastException' in foreach loop]]></name>
    <description><![CDATA[Possible 'System.InvalidCastException' in foreach loop]]></description>
  </rule>
  <rule key="PossibleInvalidOperationException">
    <priority>MINOR</priority>
    <name><![CDATA[Possible 'System.InvalidOperationException']]></name>
    <description><![CDATA[Possible 'System.InvalidOperationException']]></description>
  </rule>
  <rule key="PossibleLossOfFraction">
    <priority>MINOR</priority>
    <name><![CDATA[Possible loss of fraction]]></name>
    <description><![CDATA[Possible loss of fraction]]></description>
  </rule>
  <rule key="PossibleMistakenArgument">
    <priority>MINOR</priority>
    <name><![CDATA[Possible mistaken argument: Possible mistaken argument]]></name>
    <description><![CDATA[Possible mistaken argument: Possible mistaken argument]]></description>
  </rule>
  <rule key="PossibleMistakenCallToGetType.1">
    <priority>MINOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="PossibleMistakenCallToGetType.2">
    <priority>MINOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="PossibleMultipleEnumeration">
    <priority>MINOR</priority>
    <name><![CDATA[Possible multiple enumeration of IEnumerable]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Possible+multiple+enumeration+of+IEnumerable">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleMultipleWriteAccessInDoubleCheckLocking">
    <priority>MINOR</priority>
    <name><![CDATA[Possible incorrect implementation of Double-Check Locking pattern. Possible multiple write access to checked field]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Possible+multiple+write+access+in+double-checked+locking">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="PossibleNullReferenceException">
    <priority>MINOR</priority>
    <name><![CDATA[Possible 'System.NullReferenceException']]></name>
    <description><![CDATA[Possible 'System.NullReferenceException']]></description>
  </rule>
  <rule key="PossibleUnintendedReferenceComparison">
    <priority>MINOR</priority>
    <name><![CDATA[Possible unintended reference comparison]]></name>
    <description><![CDATA[Possible unintended reference comparison]]></description>
  </rule>
  <rule key="PossibleWriteToMe">
    <priority>MINOR</priority>
    <name><![CDATA[Possible write to 'Me']]></name>
    <description><![CDATA[Possible write to 'Me']]></description>
  </rule>
  <rule key="PossiblyMistakenUseOfParamsMethod">
    <priority>MINOR</priority>
    <name><![CDATA[Method with 'params' is invoked while more specific method is available]]></name>
    <description><![CDATA[Method with 'params' is invoked while more specific method is available]]></description>
  </rule>
  <rule key="PossiblyUnassignedProperty">
    <priority>INFO</priority>
    <name><![CDATA[Use of possibly unassigned property or global variable]]></name>
    <description><![CDATA[Use of possibly unassigned property or global variable]]></description>
  </rule>
  <rule key="PrivateFieldCanBeConvertedToLocalVariable">
    <priority>MINOR</priority>
    <name><![CDATA[Private field can be converted to local variable]]></name>
    <description><![CDATA[Private field can be converted to local variable]]></description>
  </rule>
  <rule key="PropertyGetterCannotHaveParameters">
    <priority>MAJOR</priority>
    <name><![CDATA[Property getter cannot have parameters]]></name>
    <description><![CDATA[Property getter cannot have parameters]]></description>
  </rule>
  <rule key="PropertyNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve property]]></name>
    <description><![CDATA[Cannot resolve property]]></description>
  </rule>
  <rule key="PropertySetterMustHaveSingleParameter">
    <priority>MAJOR</priority>
    <name><![CDATA[Property setter must have a single parameter]]></name>
    <description><![CDATA[Property setter must have a single parameter]]></description>
  </rule>
  <rule key="PublicConstructorInAbstractClass">
    <priority>INFO</priority>
    <name><![CDATA[Make constructor in abstract class protected]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Make+constructor+in+abstract+class+protected">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="PureAttributeOnVoidMethod">
    <priority>MINOR</priority>
    <name><![CDATA['void' method is annotated by [Pure]]]></name>
    <description><![CDATA['void' method is annotated by [Pure]]]></description>
  </rule>
  <rule key="QualifiedExpressionIsNull">
    <priority>MINOR</priority>
    <name><![CDATA[Qualifier is 'null' or 'undefined']]></name>
    <description><![CDATA[Qualifier is 'null' or 'undefined']]></description>
  </rule>
  <rule key="QualifiedExpressionMaybeNull">
    <priority>MINOR</priority>
    <name><![CDATA[Qualifier can be 'null' or 'undefined']]></name>
    <description><![CDATA[Qualifier can be 'null' or 'undefined']]></description>
  </rule>
  <rule key="Razor.SectionNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Unknown Razor section]]></name>
    <description><![CDATA[Unknown Razor section]]></description>
  </rule>
  <rule key="ReadAccessInDoubleCheckLocking">
    <priority>MINOR</priority>
    <name><![CDATA[Possible incorrect implementation of Double-Check Locking pattern. Read access to checked field]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Read+access+in+double+checked+locking">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="Redundant">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant code]]></name>
    <description><![CDATA[Redundant code]]></description>
  </rule>
  <rule key="RedundantAnonymousTypePropertyName">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant anonymous type property explicit name]]></name>
    <description><![CDATA[Redundant anonymous type property explicit name]]></description>
  </rule>
  <rule key="RedundantArgumentDefaultValue">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant argument with default value]]></name>
    <description><![CDATA[Redundant argument with default value]]></description>
  </rule>
  <rule key="RedundantArgumentName">
    <priority>INFO</priority>
    <name><![CDATA[Redundant explicit argument name specification]]></name>
    <description><![CDATA[Redundant explicit argument name specification]]></description>
  </rule>
  <rule key="RedundantArgumentNameForLiteralExpression">
    <priority>INFO</priority>
    <name><![CDATA[Redundant explicit argument name specification for literal expression]]></name>
    <description><![CDATA[Redundant explicit argument name specification for literal expression]]></description>
  </rule>
  <rule key="RedundantArrayCreationExpression">
    <priority>MINOR</priority>
    <name><![CDATA[Array creation can be replaced with array initializer]]></name>
    <description><![CDATA[Array creation can be replaced with array initializer]]></description>
  </rule>
  <rule key="RedundantArrayLowerBoundSpecification">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant array lower bound specification]]></name>
    <description><![CDATA[Redundant array lower bound specification]]></description>
  </rule>
  <rule key="RedundantAssignment">
    <priority>MINOR</priority>
    <name><![CDATA[Assignment is not used]]></name>
    <description><![CDATA[Assignment is not used]]></description>
  </rule>
  <rule key="RedundantAttributeParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Parentheses are redundant if attribute has no arguments]]></name>
    <description><![CDATA[Parentheses are redundant if attribute has no arguments]]></description>
  </rule>
  <rule key="RedundantBaseConstructorCall">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant base constructor call]]></name>
    <description><![CDATA[Redundant base constructor call]]></description>
  </rule>
  <rule key="RedundantBaseQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'base.' qualifier]]></name>
    <description><![CDATA[Redundant 'base.' qualifier]]></description>
  </rule>
  <rule key="RedundantBoolCompare">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant boolean comparison]]></name>
    <description><![CDATA[Redundant boolean comparison]]></description>
  </rule>
  <rule key="RedundantCaseLabel">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'case' label]]></name>
    <description><![CDATA[Redundant 'case' label]]></description>
  </rule>
  <rule key="RedundantCast">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant cast]]></name>
    <description><![CDATA[Redundant cast]]></description>
  </rule>
  <rule key="RedundantCast.0">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant cast to 'object': Redundant cast to 'object']]></name>
    <description><![CDATA[Redundant cast to 'object': Redundant cast to 'object']]></description>
  </rule>
  <rule key="RedundantCatchClause">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant catch clause]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Catch+clause+is+redundant">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantCheckBeforeAssignment">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant condition check before assignments]]></name>
    <description><![CDATA[Redundant condition check before assignments]]></description>
  </rule>
  <rule key="RedundantCollectionInitializerElementBraces">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant braces in collection initializer]]></name>
    <description><![CDATA[Redundant braces in collection initializer]]></description>
  </rule>
  <rule key="RedundantCommaInArrayInitializer">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant comma in array initializer]]></name>
    <description><![CDATA[Redundant comma in array initializer]]></description>
  </rule>
  <rule key="RedundantComparisonWithNull">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant comparison with 'null']]></name>
    <description><![CDATA[Redundant comparison with 'null']]></description>
  </rule>
  <rule key="RedundantDefaultFieldInitializer">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant field initializer]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Redundant+field+initializer">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantDelegateCreation">
    <priority>MINOR</priority>
    <name><![CDATA[Explicit delegate creation expression is redundant]]></name>
    <description><![CDATA[Explicit delegate creation expression is redundant]]></description>
  </rule>
  <rule key="RedundantEmptyCaseElse">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty Case Else statement]]></name>
    <description><![CDATA[Redundant empty Case Else statement]]></description>
  </rule>
  <rule key="RedundantEmptyDefaultSwitchBranch">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty default switch branch]]></name>
    <description><![CDATA[Redundant empty default switch branch]]></description>
  </rule>
  <rule key="RedundantEmptyFinallyBlock">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty finally block]]></name>
    <description><![CDATA[Redundant empty finally block]]></description>
  </rule>
  <rule key="RedundantEmptyObjectCreationArgumentList">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty argument list on object creation expression]]></name>
    <description><![CDATA[Redundant empty argument list on object creation expression]]></description>
  </rule>
  <rule key="RedundantEmptyObjectOrCollectionInitializer">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty object or collection initializer]]></name>
    <description><![CDATA[Redundant empty object or collection initializer]]></description>
  </rule>
  <rule key="RedundantEnumerableCastCall">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'IEnumerable.Cast<T>' or 'IEnumerable.OfType<T>' call]]></name>
    <description><![CDATA[Redundant 'IEnumerable.Cast<T>' or 'IEnumerable.OfType<T>' call]]></description>
  </rule>
  <rule key="RedundantExplicitArrayCreation">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant explicit type in array creation]]></name>
    <description><![CDATA[Redundant explicit type in array creation]]></description>
  </rule>
  <rule key="RedundantExplicitArraySize">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant explicit size specification in array creation]]></name>
    <description><![CDATA[Redundant explicit size specification in array creation]]></description>
  </rule>
  <rule key="RedundantExplicitNullableCreation">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant explicit nullable type creation]]></name>
    <description><![CDATA[Redundant explicit nullable type creation]]></description>
  </rule>
  <rule key="RedundantExtendsListEntry">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant class or interface specification in base types list]]></name>
    <description><![CDATA[Redundant class or interface specification in base types list]]></description>
  </rule>
  <rule key="RedundantIfElseBlock">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'else' keyword]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Redundant+'else'+keyword">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RedundantIteratorKeyword">
    <priority>MINOR</priority>
    <name><![CDATA[Iterator function without Yield statements]]></name>
    <description><![CDATA[Iterator function without Yield statements]]></description>
  </rule>
  <rule key="RedundantJumpStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant control flow jump statement]]></name>
    <description><![CDATA[Redundant control flow jump statement]]></description>
  </rule>
  <rule key="RedundantLambdaParameterType">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant lambda parameter explicit type specification]]></name>
    <description><![CDATA[Redundant lambda parameter explicit type specification]]></description>
  </rule>
  <rule key="RedundantLambdaSignatureParentheses">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant lambda signature parentheses]]></name>
    <description><![CDATA[Redundant lambda signature parentheses]]></description>
  </rule>
  <rule key="RedundantLocalFunctionName">
    <priority>INFO</priority>
    <name><![CDATA[Redundant local function name]]></name>
    <description><![CDATA[Redundant local function name]]></description>
  </rule>
  <rule key="RedundantLogicalConditionalExpressionOperand">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant operand in logical conditional expression]]></name>
    <description><![CDATA[Redundant operand in logical conditional expression]]></description>
  </rule>
  <rule key="RedundantMeQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'Me.' qualifier]]></name>
    <description><![CDATA[Redundant 'Me.' qualifier]]></description>
  </rule>
  <rule key="RedundantMyBaseQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'MyBase.' qualifier]]></name>
    <description><![CDATA[Redundant 'MyBase.' qualifier]]></description>
  </rule>
  <rule key="RedundantMyClassQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'MyClass.' qualifier]]></name>
    <description><![CDATA[Redundant 'MyClass.' qualifier]]></description>
  </rule>
  <rule key="RedundantNameQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant name qualifier]]></name>
    <description><![CDATA[Redundant name qualifier]]></description>
  </rule>
  <rule key="RedundantOverload.Global">
    <priority>INFO</priority>
    <name><![CDATA[Redundant method overload: Non-private accessibility]]></name>
    <description><![CDATA[Redundant method overload: Non-private accessibility]]></description>
  </rule>
  <rule key="RedundantOverload.Local">
    <priority>INFO</priority>
    <name><![CDATA[Redundant method overload: Private accessibility]]></name>
    <description><![CDATA[Redundant method overload: Private accessibility]]></description>
  </rule>
  <rule key="RedundantOverridenMember">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant member override]]></name>
    <description><![CDATA[Redundant member override]]></description>
  </rule>
  <rule key="RedundantParams">
    <priority>MINOR</priority>
    <name><![CDATA['params' modifier is always ignored on overrides]]></name>
    <description><![CDATA['params' modifier is always ignored on overrides]]></description>
  </rule>
  <rule key="RedundantQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant qualifier]]></name>
    <description><![CDATA[Redundant qualifier]]></description>
  </rule>
  <rule key="RedundantStringFormatCall">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'string.Format()' call]]></name>
    <description><![CDATA[Redundant 'string.Format()' call]]></description>
  </rule>
  <rule key="RedundantStringToCharArrayCall">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'string.ToCharArray()' call]]></name>
    <description><![CDATA[Redundant 'string.ToCharArray()' call]]></description>
  </rule>
  <rule key="RedundantStringType">
    <priority>INFO</priority>
    <name><![CDATA[Redundant string type]]></name>
    <description><![CDATA[Redundant string type]]></description>
  </rule>
  <rule key="RedundantTernaryExpression">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant conditional ternary expression usage]]></name>
    <description><![CDATA[Redundant conditional ternary expression usage]]></description>
  </rule>
  <rule key="RedundantThisQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'this.' qualifier]]></name>
    <description><![CDATA[Redundant 'this.' qualifier]]></description>
  </rule>
  <rule key="RedundantToStringCall">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'object.ToString()' call]]></name>
    <description><![CDATA[Redundant 'object.ToString()' call]]></description>
  </rule>
  <rule key="RedundantToStringCallForValueType">
    <priority>INFO</priority>
    <name><![CDATA[Redundant 'object.ToString()' call for value types]]></name>
    <description><![CDATA[Redundant 'object.ToString()' call for value types]]></description>
  </rule>
  <rule key="RedundantTypeArgumentsOfMethod">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant type arguments of method]]></name>
    <description><![CDATA[Redundant type arguments of method]]></description>
  </rule>
  <rule key="RedundantUnits">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant measure unit]]></name>
    <description><![CDATA[Redundant measure unit]]></description>
  </rule>
  <rule key="RedundantUnsafeContext">
    <priority>MINOR</priority>
    <name><![CDATA[Unsafe context declaration is redundant]]></name>
    <description><![CDATA[Unsafe context declaration is redundant]]></description>
  </rule>
  <rule key="RedundantUsingDirective">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant using directive]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Redundant+using+directive">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ReferenceEqualsWithValueType">
    <priority>MINOR</priority>
    <name><![CDATA['Object.ReferenceEquals' is always false because it is called with value type]]></name>
    <description><![CDATA['Object.ReferenceEquals' is always false because it is called with value type]]></description>
  </rule>
  <rule key="RemoveConstuctorInvocation">
    <priority>INFO</priority>
    <name><![CDATA[Remove constuctor invocation: Remove constuctor invocation]]></name>
    <description><![CDATA[Remove constuctor invocation: Remove constuctor invocation]]></description>
  </rule>
  <rule key="RemoveRedundantOrStatement.False">
    <priority>INFO</priority>
    <name><![CDATA[Remove redundant statement: Remove redundant statement]]></name>
    <description><![CDATA[Remove redundant statement: Remove redundant statement]]></description>
  </rule>
  <rule key="RemoveRedundantOrStatement.True">
    <priority>INFO</priority>
    <name><![CDATA[Remove redundant statement: Remove redundant statement]]></name>
    <description><![CDATA[Remove redundant statement: Remove redundant statement]]></description>
  </rule>
  <rule key="RemoveToList.1">
    <priority>INFO</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="RemoveToList.2">
    <priority>INFO</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithFirstOrDefault.4">
    <priority>INFO</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithLastOrDefault.4">
    <priority>INFO</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>(): Replace with OfType<T>()]]></name>
    <description><![CDATA[Replace with OfType<T>(): Replace with OfType<T>()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>(): Replace with OfType<T>()]]></name>
    <description><![CDATA[Replace with OfType<T>(): Replace with OfType<T>()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>(): Replace with OfType<T>()]]></name>
    <description><![CDATA[Replace with OfType<T>(): Replace with OfType<T>()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Any.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Any(): Replace with OfType<T>().Any()]]></name>
    <description><![CDATA[Replace with OfType<T>().Any(): Replace with OfType<T>().Any()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Any.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Any(): Replace with OfType<T>().Any(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Any(): Replace with OfType<T>().Any(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Count.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Count(): Replace with OfType<T>().Count()]]></name>
    <description><![CDATA[Replace with OfType<T>().Count(): Replace with OfType<T>().Count()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Count.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Count(): Replace with OfType<T>().Count(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Count(): Replace with OfType<T>().Count(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.First.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().First(): Replace with OfType<T>().First()]]></name>
    <description><![CDATA[Replace with OfType<T>().First(): Replace with OfType<T>().First()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.First.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().First(): Replace with OfType<T>().First(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().First(): Replace with OfType<T>().First(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.FirstOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType<T>().FirstOrDefault()]]></name>
    <description><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType<T>().FirstOrDefault()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.FirstOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType<T>().FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType<T>().FirstOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Last.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Last(): Replace with OfType<T>().Last()]]></name>
    <description><![CDATA[Replace with OfType<T>().Last(): Replace with OfType<T>().Last()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Last.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Last(): Replace with OfType<T>().Last(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Last(): Replace with OfType<T>().Last(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.LastOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType<T>().LastOrDefault()]]></name>
    <description><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType<T>().LastOrDefault()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.LastOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType<T>().LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType<T>().LastOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.LongCount">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().LongCount(): Replace with OfType<T>().LongCount()]]></name>
    <description><![CDATA[Replace with OfType<T>().LongCount(): Replace with OfType<T>().LongCount()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Single.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Single(): Replace with OfType<T>().Single()]]></name>
    <description><![CDATA[Replace with OfType<T>().Single(): Replace with OfType<T>().Single()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Single.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Single(): Replace with OfType<T>().Single(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Single(): Replace with OfType<T>().Single(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.SingleOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType<T>().SingleOrDefault()]]></name>
    <description><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType<T>().SingleOrDefault()]]></description>
  </rule>
  <rule key="ReplaceWithOfType.SingleOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType<T>().SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType<T>().SingleOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithOfType.Where">
    <priority>INFO</priority>
    <name><![CDATA[Replace with OfType<T>().Where(): Replace with OfType<T>().Where(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Where(): Replace with OfType<T>().Where(..)]]></description>
  </rule>
  <rule key="ReplaceWithSimpleAssignment.False">
    <priority>INFO</priority>
    <name><![CDATA[Replace with simple assignment: Replace with simple assignment]]></name>
    <description><![CDATA[Replace with simple assignment: Replace with simple assignment]]></description>
  </rule>
  <rule key="ReplaceWithSimpleAssignment.True">
    <priority>INFO</priority>
    <name><![CDATA[Replace with simple assignment: Replace with simple assignment]]></name>
    <description><![CDATA[Replace with simple assignment: Replace with simple assignment]]></description>
  </rule>
  <rule key="ReplaceWithSingleAssignment.False">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="ReplaceWithSingleAssignment.True">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToAny">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></name>
    <description><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToCount">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></name>
    <description><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToFirst">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></name>
    <description><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToFirstOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToLast">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></name>
    <description><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToLastOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToSingle">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></name>
    <description><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleCallToSingleOrDefault">
    <priority>INFO</priority>
    <name><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.1">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.2">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.3">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithSingleOrDefault.4">
    <priority>INFO</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="ReplaceWithStringIsNullOrEmpty">
    <priority>INFO</priority>
    <name><![CDATA[Use 'String.IsNullOrEmpty']]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a href="http://confluence.jetbrains.net/display/ReSharper/Use+'String.IsNullOrEmpty'">See
      JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="RequiredBaseTypesConflict">
    <priority>MINOR</priority>
    <name><![CDATA[Required base type conflicting another type]]></name>
    <description><![CDATA[Required base type conflicting another type]]></description>
  </rule>
  <rule key="RequiredBaseTypesDirectConflict">
    <priority>MINOR</priority>
    <name><![CDATA[Type specified in BaseTypeRequired attribure conflicts another type]]></name>
    <description><![CDATA[Type specified in BaseTypeRequired attribure conflicts another type]]></description>
  </rule>
  <rule key="RequiredBaseTypesIsNotInherited">
    <priority>MINOR</priority>
    <name><![CDATA[Base type is required]]></name>
    <description><![CDATA[Base type is required]]></description>
  </rule>
  <rule key="RequiresFallbackColor">
    <priority>MINOR</priority>
    <name><![CDATA[Requires fallback color]]></name>
    <description><![CDATA[Requires fallback color]]></description>
  </rule>
  <rule key="ResourceItemNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve resource item]]></name>
    <description><![CDATA[Cannot resolve resource item]]></description>
  </rule>
  <rule key="ResourceNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Cannot resolve resource]]></name>
    <description><![CDATA[Cannot resolve resource]]></description>
  </rule>
  <rule key="ResxNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Cannot resolve symbol]]></name>
    <description><![CDATA[Cannot resolve symbol]]></description>
  </rule>
  <rule key="ReturnFromGlobalScopetWithValue">
    <priority>MINOR</priority>
    <name><![CDATA[Return statement with a value in the global scope]]></name>
    <description><![CDATA[Return statement with a value in the global scope]]></description>
  </rule>
  <rule key="ReturnTypeCanBeEnumerable.Global">
    <priority>INFO</priority>
    <name><![CDATA[Return type can be IEnumerable<T>: Non-private accessibility]]></name>
    <description><![CDATA[Return type can be IEnumerable<T>: Non-private accessibility]]></description>
  </rule>
  <rule key="ReturnTypeCanBeEnumerable.Local">
    <priority>INFO</priority>
    <name><![CDATA[Return type can be IEnumerable<T>: Private accessibility]]></name>
    <description><![CDATA[Return type can be IEnumerable<T>: Private accessibility]]></description>
  </rule>
  <rule key="ReturnValueOfPureMethodIsNotUsed">
    <priority>MINOR</priority>
    <name><![CDATA[Return value of pure method is not used]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Return+value+of+pure+method+is+not+used">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ScriptTagHasBothSrcAndContentAttributes">
    <priority>MAJOR</priority>
    <name>ScriptTagHasBothSrcAndContentAttributes</name>
    <description>ScriptTagHasBothSrcAndContentAttributes</description>
  </rule>
  <rule key="ScriptTagWithContentBeforeIncludes">
    <priority>MAJOR</priority>
    <name>ScriptTagWithContentBeforeIncludes</name>
    <description>ScriptTagWithContentBeforeIncludes</description>
  </rule>
  <rule key="SealedMemberInSealedClass">
    <priority>MINOR</priority>
    <name><![CDATA[Sealed member in sealed class]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Sealed+member+in+sealed+class">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SimilarAnonymousTypeNearby">
    <priority>INFO</priority>
    <name><![CDATA[Similar anonymous type detected nearby]]></name>
    <description><![CDATA[Similar anonymous type detected nearby]]></description>
  </rule>
  <rule key="SimplifyConditionalOperator">
    <priority>INFO</priority>
    <name><![CDATA[Simplify conditional operator]]></name>
    <description><![CDATA[Simplify conditional operator]]></description>
  </rule>
  <rule key="SimplifyConditionalTernaryExpression">
    <priority>INFO</priority>
    <name><![CDATA[Simplify conditional ternary expression]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Simplify+conditional+ternary+expression">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="SimplifyIIf">
    <priority>INFO</priority>
    <name><![CDATA[Simplify 'IIf']]></name>
    <description><![CDATA[Simplify 'IIf']]></description>
  </rule>
  <rule key="SimplifyLinqExpression">
    <priority>INFO</priority>
    <name><![CDATA[Simplify LINQ expression]]></name>
    <description><![CDATA[Simplify LINQ expression]]></description>
  </rule>
  <rule key="SpecifyACultureInStringConversionExplicitly">
    <priority>MINOR</priority>
    <name><![CDATA[Specify a culture in string conversion explicitly]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Specify+a+culture+in+string+conversion+explicitly">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="SpecifyStringComparison">
    <priority>INFO</priority>
    <name><![CDATA[Specify string comparison explicitly]]></name>
    <description><![CDATA[Specify string comparison explicitly]]></description>
  </rule>
  <rule key="StatementIsNotTerminated">
    <priority>MINOR</priority>
    <name><![CDATA[Statement is not terminated with semicolon]]></name>
    <description><![CDATA[Statement is not terminated with semicolon]]></description>
  </rule>
  <rule key="StaticFieldInGenericType">
    <priority>MINOR</priority>
    <name><![CDATA[Static field in generic type]]></name>
    <description><![CDATA[Static field in generic type]]></description>
  </rule>
  <rule key="StaticFieldInitializersReferesToFieldBelow">
    <priority>MINOR</priority>
    <name><![CDATA[Static field initializer refers to static field below or in other part]]></name>
    <description><![CDATA[Static field initializer refers to static field below or in other part]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.1">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.2">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.3">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.4">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.5">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareIsCultureSpecific.6">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="StringCompareToIsCultureSpecific">
    <priority>MINOR</priority>
    <name><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></name>
    <description><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></description>
  </rule>
  <rule key="StringEndsWithIsCultureSpecific">
    <priority>MINOR</priority>
    <name><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="StringIndexOfIsCultureSpecific.1">
    <priority>MINOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="StringIndexOfIsCultureSpecific.2">
    <priority>MINOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringIndexOfIsCultureSpecific.3">
    <priority>MINOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringLastIndexOfIsCultureSpecific.1">
    <priority>MINOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="StringLastIndexOfIsCultureSpecific.2">
    <priority>MINOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringLastIndexOfIsCultureSpecific.3">
    <priority>MINOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="StringStartsWithIsCultureSpecific">
    <priority>MINOR</priority>
    <name><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="SuggestBaseTypeForParameter">
    <priority>INFO</priority>
    <name><![CDATA[Parameter can be declared with base type]]></name>
    <description><![CDATA[Parameter can be declared with base type]]></description>
  </rule>
  <rule key="SuggestUseVarKeywordEverywhere">
    <priority>INFO</priority>
    <name><![CDATA[Use 'var' keyword when possible]]></name>
    <description><![CDATA[Use 'var' keyword when possible]]></description>
  </rule>
  <rule key="SuggestUseVarKeywordEvident">
    <priority>INFO</priority>
    <name><![CDATA[Use 'var' keyword when initializer explicitly declares type]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/Use+'var'+keyword+when+initializer+explicitly+declares+type">See JetBrains
      documentation.</a></p>]]></description>
  </rule>
  <rule key="SuspiciousTypeConversion.Global">
    <priority>MINOR</priority>
    <name><![CDATA[Suspicious type conversion or check]]></name>
    <description><![CDATA[Suspicious type conversion or check]]></description>
  </rule>
  <rule key="SyntaxIsNotAllowed">
    <priority>MINOR</priority>
    <name><![CDATA[Syntax is not allowed in specified CSS version]]></name>
    <description><![CDATA[Syntax is not allowed in specified CSS version]]></description>
  </rule>
  <rule key="TailRecursiveCall">
    <priority>INFO</priority>
    <name><![CDATA[Tail recursive call may be replaced with loop]]></name>
    <description><![CDATA[Tail recursive call may be replaced with loop]]></description>
  </rule>
  <rule key="TasksNotLoaded">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown tasks assembly]]></name>
    <description><![CDATA[Unknown tasks assembly]]></description>
  </rule>
  <rule key="ThisInGlobalContext">
    <priority>MINOR</priority>
    <name><![CDATA[Use of 'this' in global context]]></name>
    <description><![CDATA[Use of 'this' in global context]]></description>
  </rule>
  <rule key="ThreadStaticAtInstanceField">
    <priority>MINOR</priority>
    <name><![CDATA[[ThreadStatic] doesn't work with instance fields]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/%27ThreadStaticAttribute%27+usage">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ThreadStaticFieldHasInitializer">
    <priority>MINOR</priority>
    <name><![CDATA[Thread static field has initializer]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/%27ThreadStaticAttribute%27+usage">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="ThrowMustBeFollowedByExpression">
    <priority>MAJOR</priority>
    <name><![CDATA[Expression is expected after 'throw' statement]]></name>
    <description><![CDATA[Expression is expected after 'throw' statement]]></description>
  </rule>
  <rule key="TooWideLocalVariableScope">
    <priority>INFO</priority>
    <name><![CDATA[Local variable has too wide declaration scope]]></name>
    <description><![CDATA[Local variable has too wide declaration scope]]></description>
  </rule>
  <rule key="TryStatementsCanBeMerged">
    <priority>INFO</priority>
    <name><![CDATA[try-catch and try-finally statements can be merged]]></name>
    <description><![CDATA[try-catch and try-finally statements can be merged]]></description>
  </rule>
  <rule key="TsDeclarationHides">
    <priority>MINOR</priority>
    <name><![CDATA[Declaration hides declaration from outer scope]]></name>
    <description><![CDATA[Declaration hides declaration from outer scope]]></description>
  </rule>
  <rule key="TsNotResolved">
    <priority>MAJOR</priority>
    <name>TsNotResolved</name>
    <description>TsNotResolved</description>
  </rule>
  <rule key="TypeParameterCanBeVariant">
    <priority>INFO</priority>
    <name><![CDATA[Type parameter could be declared as covariant or contravariant]]></name>
    <description><![CDATA[Type parameter could be declared as covariant or contravariant]]></description>
  </rule>
  <rule key="UknownTaskAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown task attribute]]></name>
    <description><![CDATA[Unknown task attribute]]></description>
  </rule>
  <rule key="UlTagContainsNonLiElements">
    <priority>MAJOR</priority>
    <name>UlTagContainsNonLiElements</name>
    <description>UlTagContainsNonLiElements</description>
  </rule>
  <rule key="UnassignedField.Compiler">
    <priority>MINOR</priority>
    <name><![CDATA[Unassigned field]]></name>
    <description><![CDATA[Unassigned field]]></description>
  </rule>
  <rule key="UnassignedField.Global">
    <priority>INFO</priority>
    <name><![CDATA[Unassigned field: Non-private accessibility]]></name>
    <description><![CDATA[Unassigned field: Non-private accessibility]]></description>
  </rule>
  <rule key="UnassignedField.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Unassigned field: Private accessibility]]></name>
    <description><![CDATA[Unassigned field: Private accessibility]]></description>
  </rule>
  <rule key="UnassignedReadonlyField">
    <priority>MINOR</priority>
    <name><![CDATA[Unassigned readonly field]]></name>
    <description><![CDATA[Unassigned readonly field]]></description>
  </rule>
  <rule key="UnassignedReadonlyField.Compiler">
    <priority>MINOR</priority>
    <name><![CDATA[Unassigned readonly field]]></name>
    <description><![CDATA[Unassigned readonly field]]></description>
  </rule>
  <rule key="UnclosedScript">
    <priority>MAJOR</priority>
    <name>UnclosedScript</name>
    <description>UnclosedScript</description>
  </rule>
  <rule key="UnexpectedValue">
    <priority>MAJOR</priority>
    <name><![CDATA[Value is unexpected]]></name>
    <description><![CDATA[Value is unexpected]]></description>
  </rule>
  <rule key="UnknownCssClass">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown CSS class]]></name>
    <description><![CDATA[Unknown CSS class]]></description>
  </rule>
  <rule key="UnknownCssVendorExtension">
    <priority>INFO</priority>
    <name><![CDATA[Unknown vendor-specific extension]]></name>
    <description><![CDATA[Unknown vendor-specific extension]]></description>
  </rule>
  <rule key="UnknownItemGroup">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown item group]]></name>
    <description><![CDATA[Unknown item group]]></description>
  </rule>
  <rule key="UnknownMetadata">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown metadata]]></name>
    <description><![CDATA[Unknown metadata]]></description>
  </rule>
  <rule key="UnknownOutputParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown output parameter]]></name>
    <description><![CDATA[Unknown output parameter]]></description>
  </rule>
  <rule key="UnknownProperty">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown property]]></name>
    <description><![CDATA[Unknown property]]></description>
  </rule>
  <rule key="UnknownTarget">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown target]]></name>
    <description><![CDATA[Unknown target]]></description>
  </rule>
  <rule key="UnknownTask">
    <priority>MINOR</priority>
    <name><![CDATA[Unknown task]]></name>
    <description><![CDATA[Unknown task]]></description>
  </rule>
  <rule key="UnreachableCode">
    <priority>MINOR</priority>
    <name><![CDATA[Unreachable code detected]]></name>
    <description><![CDATA[Unreachable code detected]]></description>
  </rule>
  <rule key="UnsupportedRequiredBaseType">
    <priority>MINOR</priority>
    <name><![CDATA[BaseTypeRequired attribute supports only classes and interfaces]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/BaseTypeRequired+attribute+supports+only+classes+and+interfaces">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="UnusedAnonymousMethodSignature">
    <priority>MINOR</priority>
    <name><![CDATA[Anonymous method signature is not necessary]]></name>
    <description><![CDATA[Anonymous method signature is not necessary]]></description>
  </rule>
  <rule key="UnusedAutoPropertyAccessor.Global">
    <priority>MINOR</priority>
    <name><![CDATA[Auto-implemented property accessor is never used: Non-private accessibility]]></name>
    <description><![CDATA[Auto-implemented property accessor is never used: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedAutoPropertyAccessor.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Auto-implemented property accessor is never used: Private accessibility]]></name>
    <description><![CDATA[Auto-implemented property accessor is never used: Private accessibility]]></description>
  </rule>
  <rule key="UnusedField.Compiler">
    <priority>MINOR</priority>
    <name><![CDATA[Field is never used]]></name>
    <description><![CDATA[Field is never used]]></description>
  </rule>
  <rule key="UnusedImportClause">
    <priority>MINOR</priority>
    <name><![CDATA[Unused import clause]]></name>
    <description><![CDATA[Unused import clause]]></description>
  </rule>
  <rule key="UnusedLabel">
    <priority>MINOR</priority>
    <name><![CDATA[Unused label]]></name>
    <description><![CDATA[Unused label]]></description>
  </rule>
  <rule key="UnusedLocals">
    <priority>MINOR</priority>
    <name><![CDATA[Unused local variable of function]]></name>
    <description><![CDATA[Unused local variable of function]]></description>
  </rule>
  <rule key="UnusedMember.Global">
    <priority>INFO</priority>
    <name><![CDATA[Type or type member is never used: Non-private accessibility]]></name>
    <description><![CDATA[Type or type member is never used: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMember.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Type or type member is never used: Private accessibility]]></name>
    <description><![CDATA[Type or type member is never used: Private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberHiearchy.Global">
    <priority>INFO</priority>
    <name><![CDATA[Type member is only used in overrides: Non-private accessibility]]></name>
    <description><![CDATA[Type member is only used in overrides: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberHiearchy.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Type member is only used in overrides: Private accessibility]]></name>
    <description><![CDATA[Type member is only used in overrides: Private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberInSuper.Global">
    <priority>INFO</priority>
    <name><![CDATA[Type member is never accessed via base type: Non-private accessibility]]></name>
    <description><![CDATA[Type member is never accessed via base type: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMemberInSuper.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Type member is never accessed via base type: Private accessibility]]></name>
    <description><![CDATA[Type member is never accessed via base type: Private accessibility]]></description>
  </rule>
  <rule key="UnusedMethodReturnValue.Global">
    <priority>INFO</priority>
    <name><![CDATA[Method return value is never used: Non-private accessibility]]></name>
    <description><![CDATA[Method return value is never used: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedMethodReturnValue.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Method return value is never used: Private accessibility]]></name>
    <description><![CDATA[Method return value is never used: Private accessibility]]></description>
  </rule>
  <rule key="UnusedParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Unused parameter]]></name>
    <description><![CDATA[Unused parameter]]></description>
  </rule>
  <rule key="UnusedParameter.Global">
    <priority>INFO</priority>
    <name><![CDATA[Unused parameter: Non-private accessibility]]></name>
    <description><![CDATA[Unused parameter: Non-private accessibility]]></description>
  </rule>
  <rule key="UnusedParameter.Local">
    <priority>MINOR</priority>
    <name><![CDATA[Unused parameter: Private accessibility]]></name>
    <description><![CDATA[Unused parameter: Private accessibility]]></description>
  </rule>
  <rule key="UnusedProperty">
    <priority>MINOR</priority>
    <name><![CDATA[Unused property or function]]></name>
    <description><![CDATA[Unused property or function]]></description>
  </rule>
  <rule key="UnusedTypeParameter">
    <priority>MINOR</priority>
    <name><![CDATA[Unused type parameter]]></name>
    <description><![CDATA[Unused type parameter]]></description>
  </rule>
  <rule key="UnusedVariable">
    <priority>MINOR</priority>
    <name><![CDATA[Unused local variable]]></name>
    <description><![CDATA[Unused local variable]]></description>
  </rule>
  <rule key="UnusedVariable.Compiler">
    <priority>MINOR</priority>
    <name><![CDATA[Unused local variable]]></name>
    <description><![CDATA[Unused local variable]]></description>
  </rule>
  <rule key="UsageOfDefinitelyUnassignedValue">
    <priority>MINOR</priority>
    <name><![CDATA[Usage of unassigned local variable]]></name>
    <description><![CDATA[Usage of unassigned local variable]]></description>
  </rule>
  <rule key="UsageOfPossiblyUnassignedValue">
    <priority>MINOR</priority>
    <name><![CDATA[Usage of possibly unassigned local variable]]></name>
    <description><![CDATA[Usage of possibly unassigned local variable]]></description>
  </rule>
  <rule key="UseArrayCreationExpression.1">
    <priority>INFO</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="UseArrayCreationExpression.2">
    <priority>INFO</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="UseIndexedProperty">
    <priority>INFO</priority>
    <name><![CDATA[Use indexed property]]></name>
    <description><![CDATA[Use indexed property]]></description>
  </rule>
  <rule key="UseIsOperator.1">
    <priority>INFO</priority>
    <name><![CDATA[Use 'is' operator: Use 'is' operator]]></name>
    <description><![CDATA[Use 'is' operator: Use 'is' operator]]></description>
  </rule>
  <rule key="UseIsOperator.2">
    <priority>INFO</priority>
    <name><![CDATA[Use 'is' operator: Use 'is' operator]]></name>
    <description><![CDATA[Use 'is' operator: Use 'is' operator]]></description>
  </rule>
  <rule key="UseMethodAny.0">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.1">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.2">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.3">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodAny.4">
    <priority>INFO</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="UseMethodIsInstanceOfType">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></name>
    <description><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></description>
  </rule>
  <rule key="UseObjectOrCollectionInitializer">
    <priority>INFO</priority>
    <name><![CDATA[Use object or collection initializer when possible]]></name>
    <description><![CDATA[Use object or collection initializer when possible]]></description>
  </rule>
  <rule key="UseOfImplicitGlobalInFunctionScope">
    <priority>MINOR</priority>
    <name><![CDATA[Use of implicitly declared global variable]]></name>
    <description><![CDATA[Use of implicitly declared global variable]]></description>
  </rule>
  <rule key="UsingOfReservedWord">
    <priority>MINOR</priority>
    <name><![CDATA[Use of future reserved word]]></name>
    <description><![CDATA[Use of future reserved word]]></description>
  </rule>
  <rule key="ValueParameterNotUsed">
    <priority>MINOR</priority>
    <name><![CDATA['value' parameter is not used]]></name>
    <description><![CDATA[<h2>JetBrains Code Inspection Wiki</h2> <p><a
      href="http://confluence.jetbrains.net/display/ReSharper/%27value%27+parameter+is+not+used">See JetBrains documentation.</a></p>]]></description>
  </rule>
  <rule key="VBCheckForReferenceEqualityInstead.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="VBCheckForReferenceEqualityInstead.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Check for reference equality instead: Check for reference equality instead]]></name>
    <description><![CDATA[Check for reference equality instead: Check for reference equality instead]]></description>
  </rule>
  <rule key="VBPossibleMistakenArgument">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken argument: Possible mistaken argument]]></name>
    <description><![CDATA[Possible mistaken argument: Possible mistaken argument]]></description>
  </rule>
  <rule key="VBPossibleMistakenCallToGetType.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="VBPossibleMistakenCallToGetType.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></name>
    <description><![CDATA[Possible mistaken call to GetType(): Possible mistaken call to GetType()]]></description>
  </rule>
  <rule key="VBRemoveToList.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="VBRemoveToList.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Remove ToList(): Remove ToList()]]></name>
    <description><![CDATA[Remove ToList(): Remove ToList()]]></description>
  </rule>
  <rule key="VBReplaceWithFirstOrDefault">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></name>
    <description><![CDATA[Replace with FirstOrDefault($args$): Replace with FirstOrDefault($args$)]]></description>
  </rule>
  <rule key="VBReplaceWithLastOrDefault">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></name>
    <description><![CDATA[Replace with LastOrDefault($args$): Replace with LastOrDefault($args$)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>(): Replace with OfType(Of ..)()]]></name>
    <description><![CDATA[Replace with OfType<T>(): Replace with OfType(Of ..)()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>(): Replace with OfType(Of ..)()]]></name>
    <description><![CDATA[Replace with OfType<T>(): Replace with OfType(Of ..)()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Any.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Any(): Replace with OfType(Of ..)().Any()]]></name>
    <description><![CDATA[Replace with OfType<T>().Any(): Replace with OfType(Of ..)().Any()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Any.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Any(): Replace with OfType(Of ..)().Any(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Any(): Replace with OfType(Of ..)().Any(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Count.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Count(): Replace with OfType(Of ..)().Count()]]></name>
    <description><![CDATA[Replace with OfType<T>().Count(): Replace with OfType(Of ..)().Count()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Count.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Count(): Replace with OfType(Of ..)().Count(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Count(): Replace with OfType(Of ..)().Count(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.First.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().First(): Replace with OfType(Of ..)().First()]]></name>
    <description><![CDATA[Replace with OfType<T>().First(): Replace with OfType(Of ..)().First()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.First.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().First(): Replace with OfType(Of ..)().First(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().First(): Replace with OfType(Of ..)().First(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.FirstOrDefault.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault()]]></name>
    <description><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.FirstOrDefault.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().FirstOrDefault(): Replace with OfType(Of ..)().FirstOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Last.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Last(): Replace with OfType(Of ..)().Last()]]></name>
    <description><![CDATA[Replace with OfType<T>().Last(): Replace with OfType(Of ..)().Last()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Last.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Last(): Replace with OfType(Of ..)().Last(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Last(): Replace with OfType(Of ..)().Last(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.LastOrDefault.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault()]]></name>
    <description><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.LastOrDefault.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().LastOrDefault(): Replace with OfType(Of ..)().LastOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Single.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Single(): Replace with OfType(Of ..)().Single()]]></name>
    <description><![CDATA[Replace with OfType<T>().Single(): Replace with OfType(Of ..)().Single()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Single.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Single(): Replace with OfType(Of ..)().Single(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Single(): Replace with OfType(Of ..)().Single(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.SingleOrDefault.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault()]]></name>
    <description><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault()]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.SingleOrDefault.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().SingleOrDefault(): Replace with OfType(Of ..)().SingleOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithOfType.Where">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with OfType<T>().Where(): Replace with OfType(Of ..)().Where(..)]]></name>
    <description><![CDATA[Replace with OfType<T>().Where(): Replace with OfType(Of ..)().Where(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleAssignment.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="VBReplaceWithSingleAssignment.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single assignment: Replace with single assignment]]></name>
    <description><![CDATA[Replace with single assignment: Replace with single assignment]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToAny">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></name>
    <description><![CDATA[Replace with single call to Any(..): Replace with single call to Any(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToCount">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></name>
    <description><![CDATA[Replace with single call to Count(..): Replace with single call to Count(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToFirst">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></name>
    <description><![CDATA[Replace with single call to First(..): Replace with single call to First(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToFirstOrDefault">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to FirstOrDefault(..): Replace with single call to FirstOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToLast">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></name>
    <description><![CDATA[Replace with single call to Last(..): Replace with single call to Last(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToLastOrDefault">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to LastOrDefault(..): Replace with single call to LastOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToSingle">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></name>
    <description><![CDATA[Replace with single call to Single(..): Replace with single call to Single(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleCallToSingleOrDefault">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></name>
    <description><![CDATA[Replace with single call to SingleOrDefault(..): Replace with single call to SingleOrDefault(..)]]></description>
  </rule>
  <rule key="VBReplaceWithSingleOrDefault">
    <priority>MAJOR</priority>
    <name><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></name>
    <description><![CDATA[Replace with SingleOrDefault($args$): Replace with SingleOrDefault($args$)]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.10">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.3">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.4">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.5">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.6">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.7">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.8">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBSimplifyLinqExpression.9">
    <priority>MAJOR</priority>
    <name><![CDATA[Simplify expression: Simplify expression]]></name>
    <description><![CDATA[Simplify expression: Simplify expression]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.1">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.2">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.3">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, string, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.4">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.5">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareIsCultureSpecific.6">
    <priority>MINOR</priority>
    <name><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></name>
    <description><![CDATA[String.Compare is culture-specific: String.Compare(string, int, string, int, bool) is culture-specific]]></description>
  </rule>
  <rule key="VBStringCompareToIsCultureSpecific">
    <priority>MINOR</priority>
    <name><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></name>
    <description><![CDATA[String.CompareTo is culture-specific: String.CompareTo is culture-specific]]></description>
  </rule>
  <rule key="VBStringEndsWithIsCultureSpecific">
    <priority>MINOR</priority>
    <name><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.EndsWith is culture-specific: String.EndsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringIndexOfIsCultureSpecific.1">
    <priority>MINOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringIndexOfIsCultureSpecific.2">
    <priority>MINOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringIndexOfIsCultureSpecific.3">
    <priority>MINOR</priority>
    <name><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.IndexOf is culture-specific: String.IndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringLastIndexOfIsCultureSpecific.1">
    <priority>MINOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string) is culture-specific]]></description>
  </rule>
  <rule key="VBStringLastIndexOfIsCultureSpecific.2">
    <priority>MINOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringLastIndexOfIsCultureSpecific.3">
    <priority>MINOR</priority>
    <name><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></name>
    <description><![CDATA[String.LastIndexOf is culture-specific: String.LastIndexOf(string, int) is culture-specific]]></description>
  </rule>
  <rule key="VBStringStartsWithIsCultureSpecific">
    <priority>MINOR</priority>
    <name><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></name>
    <description><![CDATA[String.StartsWith is culture-specific: String.StartsWith(string) is culture-specific]]></description>
  </rule>
  <rule key="VbUnreachableCode">
    <priority>MINOR</priority>
    <name><![CDATA[Unreachable code]]></name>
    <description><![CDATA[Unreachable code]]></description>
  </rule>
  <rule key="VBUseArrayCreationExpression.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="VBUseArrayCreationExpression.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Use array creation expression: Use array creation expression]]></name>
    <description><![CDATA[Use array creation expression: Use array creation expression]]></description>
  </rule>
  <rule key="VBUseFirstInstead">
    <priority>MAJOR</priority>
    <name><![CDATA[Use First() instead: Use First() instead]]></name>
    <description><![CDATA[Use First() instead: Use First() instead]]></description>
  </rule>
  <rule key="VBUseMethodAny.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.3">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.4">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodAny.5">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method Any(): Use method Any()]]></name>
    <description><![CDATA[Use method Any(): Use method Any()]]></description>
  </rule>
  <rule key="VBUseMethodIsInstanceOfType">
    <priority>MAJOR</priority>
    <name><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></name>
    <description><![CDATA[Use method IsInstanceOfType(..): Use method IsInstanceOfType(..)]]></description>
  </rule>
  <rule key="VBUseTypeOfIsOperator.1">
    <priority>MAJOR</priority>
    <name><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></name>
    <description><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></description>
  </rule>
  <rule key="VBUseTypeOfIsOperator.2">
    <priority>MAJOR</priority>
    <name><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></name>
    <description><![CDATA[Use 'TypeOf .. Is ..' operator: Use 'TypeOf .. Is ..' operator]]></description>
  </rule>
  <rule key="VBWarnings::BC40000">
    <priority>MINOR</priority>
    <name><![CDATA[BC40000:Use obsolete member]]></name>
    <description><![CDATA[BC40000:Use obsolete member]]></description>
  </rule>
  <rule key="VBWarnings::BC400005">
    <priority>MINOR</priority>
    <name><![CDATA[ BC400005:Member shadows an overriable member]]></name>
    <description><![CDATA[ BC400005:Member shadows an overriable member]]></description>
  </rule>
  <rule key="VBWarnings::BC40008">
    <priority>MINOR</priority>
    <name><![CDATA[BC40008:Use obsolete member (without message)]]></name>
    <description><![CDATA[BC40008:Use obsolete member (without message)]]></description>
  </rule>
  <rule key="VBWarnings::BC40056">
    <priority>MINOR</priority>
    <name><![CDATA[BC40056:Namespace or type specified in the Imports 'name' doesn't contain any public member or cannot be found]]></name>
    <description><![CDATA[BC40056:Namespace or type specified in the Imports 'name' doesn't contain any public member or cannot be found]]></description>
  </rule>
  <rule key="VBWarnings::BC42016">
    <priority>MINOR</priority>
    <name><![CDATA[BC42016:Runtime errors might occur when converting X to Y]]></name>
    <description><![CDATA[BC42016:Runtime errors might occur when converting X to Y]]></description>
  </rule>
  <rule key="VBWarnings::BC42025">
    <priority>MINOR</priority>
    <name><![CDATA[BC42025:Access of shared member through an instance]]></name>
    <description><![CDATA[BC42025:Access of shared member through an instance]]></description>
  </rule>
  <rule key="VBWarnings::BC42104">
    <priority>MINOR</priority>
    <name><![CDATA[BC42104:Variable is used before it has been assigned a value]]></name>
    <description><![CDATA[BC42104:Variable is used before it has been assigned a value]]></description>
  </rule>
  <rule key="VBWarnings::BC42105">
    <priority>MINOR</priority>
    <name><![CDATA[BC42105,BC42106,BC42107:Function doesn't return a value on all code paths]]></name>
    <description><![CDATA[BC42105,BC42106,BC42107:Function doesn't return a value on all code paths]]></description>
  </rule>
  <rule key="VBWarnings::BC42304">
    <priority>MINOR</priority>
    <name><![CDATA[BC42304:Syntax error in XML comment]]></name>
    <description><![CDATA[BC42304:Syntax error in XML comment]]></description>
  </rule>
  <rule key="VBWarnings::BC42309">
    <priority>MINOR</priority>
    <name><![CDATA[BC42309:XML comment has a tag with a 'cref' attribute that could not be resolved]]></name>
    <description><![CDATA[BC42309:XML comment has a tag with a 'cref' attribute that could not be resolved]]></description>
  </rule>
  <rule key="VBWarnings::BC42322">
    <priority>MINOR</priority>
    <name><![CDATA[BC42322:Runtime errors might occur when converting X to Y]]></name>
    <description><![CDATA[BC42322:Runtime errors might occur when converting X to Y]]></description>
  </rule>
  <rule key="VBWarnings::BC42349">
    <priority>MINOR</priority>
    <name><![CDATA[BC42349:Redundant DirectCast to the equals value type]]></name>
    <description><![CDATA[BC42349:Redundant DirectCast to the equals value type]]></description>
  </rule>
  <rule key="VBWarnings::BC42353">
    <priority>MINOR</priority>
    <name><![CDATA[BC42353,BC42354,BC42355:Function doesn't return a value on all code paths]]></name>
    <description><![CDATA[BC42353,BC42354,BC42355:Function doesn't return a value on all code paths]]></description>
  </rule>
  <rule key="VBWarnings::BC42356">
    <priority>MINOR</priority>
    <name><![CDATA[ BC42356:Async method lacks 'Await' operators]]></name>
    <description><![CDATA[ BC42356:Async method lacks 'Await' operators]]></description>
  </rule>
  <rule key="VBWarnings::BC42358">
    <priority>MINOR</priority>
    <name><![CDATA[ BC42358: Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'Await' operator to
      the result of the call.]]></name>
    <description><![CDATA[ BC42358: Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'Await'
      operator to the result of the call.]]></description>
  </rule>
  <rule key="VBWarnings::WME006">
    <priority>MINOR</priority>
    <name><![CDATA[WME006:Namespace should be default namespace of this project]]></name>
    <description><![CDATA[WME006:Namespace should be default namespace of this project]]></description>
  </rule>
  <rule key="VirtualMemberNeverOverriden.Global">
    <priority>INFO</priority>
    <name><![CDATA[Virtual(overridable) member is never overridden: Non-private accessibility]]></name>
    <description><![CDATA[Virtual(overridable) member is never overridden: Non-private accessibility]]></description>
  </rule>
  <rule key="VirtualMemberNeverOverriden.Local">
    <priority>INFO</priority>
    <name><![CDATA[Virtual(overridable) member is never overridden: Private accessibility]]></name>
    <description><![CDATA[Virtual(overridable) member is never overridden: Private accessibility]]></description>
  </rule>
  <rule key="WebConfig.ModuleQualificationResolve">
    <priority>MINOR</priority>
    <name><![CDATA[Module qualification required]]></name>
    <description><![CDATA[Module qualification required]]></description>
  </rule>
  <rule key="WebConfig.WebConfigPathWarning">
    <priority>MINOR</priority>
    <name><![CDATA[Referenced path cannot be found in the website]]></name>
    <description><![CDATA[Referenced path cannot be found in the website]]></description>
  </rule>
  <rule key="Web.IgnoredPath">
    <priority>INFO</priority>
    <name><![CDATA[Ignored path]]></name>
    <description><![CDATA[Ignored path]]></description>
  </rule>
  <rule key="Web.MappedPath">
    <priority>INFO</priority>
    <name><![CDATA[Mapped path]]></name>
    <description><![CDATA[Mapped path]]></description>
  </rule>
  <rule key="WebConfig.RedundantAddNamespaceTag">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant add namespace element]]></name>
    <description><![CDATA[Redundant add namespace element]]></description>
  </rule>
  <rule key="WebConfig.RedundantLocationTag">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant location element]]></name>
    <description><![CDATA[Redundant location element]]></description>
  </rule>
  <rule key="WebConfig.TagPrefixRedundant">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant tagPrefix declaration]]></name>
    <description><![CDATA[Redundant tagPrefix declaration]]></description>
  </rule>
  <rule key="WebConfig.UnusedAddTag">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant add element]]></name>
    <description><![CDATA[Redundant add element]]></description>
  </rule>
  <rule key="WebConfig.UnusedElementDueToConfigSourceAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant element or attribute because of 'configSource' attribute]]></name>
    <description><![CDATA[Redundant element or attribute because of 'configSource' attribute]]></description>
  </rule>
  <rule key="WebConfig.UnusedRemoveOrClearTag">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant remove or clear element]]></name>
    <description><![CDATA[Redundant remove or clear element]]></description>
  </rule>
  <rule key="WrongExpressionStatement">
    <priority>MINOR</priority>
    <name><![CDATA[Suspicious expression statement]]></name>
    <description><![CDATA[Suspicious expression statement]]></description>
  </rule>
  <rule key="WrongMetadataUse">
    <priority>INFO</priority>
    <name><![CDATA[Wrong metadata use]]></name>
    <description><![CDATA[Wrong metadata use]]></description>
  </rule>
  <rule key="Xaml.BindingWithContextNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Unresolved binding path when DataContext is known]]></name>
    <description><![CDATA[Unresolved binding path when DataContext is known]]></description>
  </rule>
  <rule key="Xaml.BindingWithoutContextNotResolved">
    <priority>INFO</priority>
    <name><![CDATA[Unresolved binding path when DataContext is unknown]]></name>
    <description><![CDATA[Unresolved binding path when DataContext is unknown]]></description>
  </rule>
  <rule key="Xaml.ConstructorWarning">
    <priority>MINOR</priority>
    <name><![CDATA[Constructor not resolved]]></name>
    <description><![CDATA[Constructor not resolved]]></description>
  </rule>
  <rule key="Xaml.DependencyPropertyResolveError">
    <priority>MINOR</priority>
    <name><![CDATA[Dependency property descriptor field missing]]></name>
    <description><![CDATA[Dependency property descriptor field missing]]></description>
  </rule>
  <rule key="Xaml.DuplicateStyleSetter">
    <priority>MINOR</priority>
    <name><![CDATA[Duplicate style property/event setter]]></name>
    <description><![CDATA[Duplicate style property/event setter]]></description>
  </rule>
  <rule key="Xaml.DynamicResourceError">
    <priority>MAJOR</priority>
    <name><![CDATA[{DynamicResource} can only be used with dependency property]]></name>
    <description><![CDATA[{DynamicResource} can only be used with dependency property]]></description>
  </rule>
  <rule key="Xaml.ElementNameReferenceNotResolved">
    <priority>MAJOR</priority>
    <name><![CDATA[Element name reference not resolved]]></name>
    <description><![CDATA[Element name reference not resolved]]></description>
  </rule>
  <rule key="Xaml.IgnoredPathHighlighting">
    <priority>INFO</priority>
    <name><![CDATA[Ignored path]]></name>
    <description><![CDATA[Ignored path]]></description>
  </rule>
  <rule key="Xaml.IndexOutOfGridDefinition">
    <priority>MINOR</priority>
    <name><![CDATA[Grid element column/row index is out of grid definition range]]></name>
    <description><![CDATA[Grid element column/row index is out of grid definition range]]></description>
  </rule>
  <rule key="Xaml.InvalidMemberType">
    <priority>MAJOR</priority>
    <name>Xaml.InvalidMemberType</name>
    <description>Xaml.InvalidMemberType</description>
  </rule>
  <rule key="Xaml.InvalidResourceTargetType">
    <priority>MAJOR</priority>
    <name>Xaml.InvalidResourceTargetType</name>
    <description>Xaml.InvalidResourceTargetType</description>
  </rule>
  <rule key="Xaml.InvalidResourceType">
    <priority>MAJOR</priority>
    <name>Xaml.InvalidResourceType</name>
    <description>Xaml.InvalidResourceType</description>
  </rule>
  <rule key="Xaml.InvalidType">
    <priority>MAJOR</priority>
    <name>Xaml.InvalidType</name>
    <description>Xaml.InvalidType</description>
  </rule>
  <rule key="Xaml.LanguageLevel">
    <priority>MAJOR</priority>
    <name><![CDATA[XAML language level error]]></name>
    <description><![CDATA[XAML language level error]]></description>
  </rule>
  <rule key="Xaml.MappedPathHighlighting">
    <priority>INFO</priority>
    <name><![CDATA[Mapped path]]></name>
    <description><![CDATA[Mapped path]]></description>
  </rule>
  <rule key="Xaml.MissingGridIndex">
    <priority>MINOR</priority>
    <name><![CDATA[Missing grid column/row setter for non-first child]]></name>
    <description><![CDATA[Missing grid column/row setter for non-first child]]></description>
  </rule>
  <rule key="Xaml.PathError">
    <priority>MINOR</priority>
    <name><![CDATA[Path error]]></name>
    <description><![CDATA[Path error]]></description>
  </rule>
  <rule key="Xaml.RedundantAttachedProperty">
    <priority>MINOR</priority>
    <name><![CDATA[Remove redundant attached property setter]]></name>
    <description><![CDATA[Remove redundant attached property setter]]></description>
  </rule>
  <rule key="Xaml.RedundantCollectionProperty">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant empty collection property setter]]></name>
    <description><![CDATA[Redundant empty collection property setter]]></description>
  </rule>
  <rule key="Xaml.RedundantFreezeAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant 'Freeze' attribute]]></name>
    <description><![CDATA[Redundant 'Freeze' attribute]]></description>
  </rule>
  <rule key="Xaml.RedundantGridDefinitions">
    <priority>MINOR</priority>
    <name><![CDATA[Single grid row/column definition is redundant]]></name>
    <description><![CDATA[Single grid row/column definition is redundant]]></description>
  </rule>
  <rule key="Xaml.RedundantGridSpan">
    <priority>MINOR</priority>
    <name><![CDATA[Single-cell grid column/row span is redundant]]></name>
    <description><![CDATA[Single-cell grid column/row span is redundant]]></description>
  </rule>
  <rule key="Xaml.RedundantModifiersAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant modifiers attribute]]></name>
    <description><![CDATA[Redundant modifiers attribute]]></description>
  </rule>
  <rule key="Xaml.RedundantNameAttribute">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant name attribute]]></name>
    <description><![CDATA[Redundant name attribute]]></description>
  </rule>
  <rule key="Xaml.RedundantNamespaceAlias">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant namespace alias]]></name>
    <description><![CDATA[Redundant namespace alias]]></description>
  </rule>
  <rule key="Xaml.RedundantPropertyTypeQualifier">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant property type qualifier]]></name>
    <description><![CDATA[Redundant property type qualifier]]></description>
  </rule>
  <rule key="Xaml.RedundantResource">
    <priority>MINOR</priority>
    <name><![CDATA[Redundant resource]]></name>
    <description><![CDATA[Redundant resource]]></description>
  </rule>
  <rule key="Xaml.RedundantStyledValue">
    <priority>MINOR</priority>
    <name><![CDATA[Property value is equal to style-provided]]></name>
    <description><![CDATA[Property value is equal to style-provided]]></description>
  </rule>
  <rule key="Xaml.RoutedEventResolveError">
    <priority>MINOR</priority>
    <name><![CDATA[Routed event descriptor field missing]]></name>
    <description><![CDATA[Routed event descriptor field missing]]></description>
  </rule>
  <rule key="Xaml.StaticResourceNotResolved">
    <priority>MINOR</priority>
    <name><![CDATA[Static resource not resolved]]></name>
    <description><![CDATA[Static resource not resolved]]></description>
  </rule>
  <rule key="Xaml.StyleInvalidTargetType">
    <priority>MAJOR</priority>
    <name><![CDATA[Style target type is not convertible to base type]]></name>
    <description><![CDATA[Style target type is not convertible to base type]]></description>
  </rule>
  <rule key="Xaml.XamlRelativeSourceDefaultModeWarningHighlighting">
    <priority>MINOR</priority>
    <name><![CDATA[RelativeSourceMode is not set explicitly]]></name>
    <description><![CDATA[RelativeSourceMode is not set explicitly]]></description>
  </rule>
  <rule key="Xaml.XKeyAttributeDisallowed">
    <priority>MAJOR</priority>
    <name><![CDATA[x:Key is allowed for resources and dictionary elements only]]></name>
    <description><![CDATA[x:Key is allowed for resources and dictionary elements only]]></description>
  </rule>
  <rule key="XmlDocCommentSyntaxProblem">
    <priority>MINOR</priority>
    <name><![CDATA[Illegal syntax in XML code comment]]></name>
    <description><![CDATA[Illegal syntax in XML code comment]]></description>
  </rule>
  <rule key="AsxxErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[Asxx Errors]]></name>
    <description><![CDATA[Asxx Errors]]></description>
  </rule>
  <rule key="HtmlErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[HTML Errors]]></name>
    <description><![CDATA[HTML Errors]]></description>
  </rule>
  <rule key="CssErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[Css Errors]]></name>
    <description><![CDATA[Css Errors]]></description>
  </rule>
  <rule key="StructuralSearch">
    <priority>MAJOR</priority>
    <name><![CDATA[Structural Search Warnings]]></name>
    <description><![CDATA[Structural Search Warnings]]></description>
  </rule>
  <rule key="WebConfigErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[WebConfig Errors]]></name>
    <description><![CDATA[WebConfig Errors]]></description>
  </rule>
  <rule key="XAMLErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[XAML Errors]]></name>
    <description><![CDATA[XAML Errors]]></description>
  </rule>
  <rule key="VBErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[VB Compiler Errors]]></name>
    <description><![CDATA[VB Compiler Errors]]></description>
  </rule>
  <rule key="XMLWarnings">
    <priority>MINOR</priority>
    <name><![CDATA[XML Warnings]]></name>
    <description><![CDATA[XML Warnings]]></description>
  </rule>
  <rule key="CodeSmell">
    <priority>MAJOR</priority>
    <name><![CDATA[CodeSmell]]></name>
    <description><![CDATA[Potential Code Quality Issues]]></description>
  </rule>
  <rule key="BuildScriptErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[Build Scripts Errors]]></name>
    <description><![CDATA[Build Scripts Errors]]></description>
  </rule>
  <rule key="AspErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[ASP Errors]]></name>
    <description><![CDATA[ASP Errors]]></description>
  </rule>
  <rule key="RazorErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[Razor Errors]]></name>
    <description><![CDATA[Razor Errors]]></description>
  </rule>
  <rule key="TypeScriptErrors">
    <priority>MINOR</priority>
    <name><![CDATA[TypeScript Compiler Errors]]></name>
    <description><![CDATA[TypeScript Compiler Errors]]></description>
  </rule>
  <rule key="CSharpErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[C# Compiler Errors]]></name>
    <description><![CDATA[C# Compiler Errors]]></description>
  </rule>
  <rule key="JScriptErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[JavaScript Errors]]></name>
    <description><![CDATA[JavaScript Errors]]></description>
  </rule>
  <rule key="RazorWarnings">
    <priority>MINOR</priority>
    <name><![CDATA[Razor Warnings]]></name>
    <description><![CDATA[Razor Warnings]]></description>
  </rule>
  <rule key="XMLErrors">
    <priority>MAJOR</priority>
    <name><![CDATA[XML Errors]]></name>
    <description><![CDATA[XML Errors]]></description>
  </rule>
</rules>
